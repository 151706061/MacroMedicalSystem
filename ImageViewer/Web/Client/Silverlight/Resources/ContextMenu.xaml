<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="clr-namespace:Macro.Web.Client.Silverlight;assembly=Macro.Web.Client.Silverlight">


    <!-- MenuScrollViewerStyle -->
    <Style TargetType="ScrollViewer" x:Key="MenuScrollViewerStyle">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <!--We have to simulate the drop shadow effect for the scroll viewer because of a bug in silverlight that causes Popups
                        that are children of other controls to be rendered in the incorrect position (often off-screen), even if you set the Horizontal and Vertical offsets.
                        I suppose I could work around it by changing the design of the MenuItem so it was a ContentControl with a "root" popup containing
                        an ItemsControl, but i shouldn't have to do that.  Popups that don't have parents ("root" popup) are not affected by this bug.
                        
                        For more info:
                        https://connect.microsoft.com/VisualStudio/feedback/details/521605/silverlight-net-forum-combobox-with-effect-wrong-dropdown-loacation-in-a-popup
                        -->
                    <Grid Cursor="Hand">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Rectangle Margin="1" Grid.Column="0" Grid.Row="0"  Grid.ColumnSpan="2" Grid.RowSpan="2" RadiusX="6" RadiusY="6">
                            <Rectangle.Effect>
                                <BlurEffect/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Grid.Column="0" Grid.Row="0" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource GlobalSemiTransparentBackgroundBrush}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource CM_BorderColor}"/>
                            </Border.BorderBrush>
                            <Border.Effect>
                                <DropShadowEffect  ShadowDepth="10"/>
                            </Border.Effect>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                      Cursor="{TemplateBinding Cursor}"
                                                      Margin="{TemplateBinding Padding}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>


                                <ScrollBar x:Name="VerticalScrollBar" Style="{StaticResource ScrollBarStyle}" Width="15"
                                         IsTabStop="False"
                                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                         Grid.Column="1" Grid.Row="0" Orientation="Vertical"
                                         ViewportSize="{TemplateBinding ViewportHeight}"
                                         Maximum="{TemplateBinding ScrollableHeight}"
                                         Minimum="0"
                                         Value="{TemplateBinding VerticalOffset}"
                                         Margin="0,-1,-1,-1"/>

                                <ScrollBar x:Name="HorizontalScrollBar" Style="{StaticResource ScrollBarStyle}" Height="15"
                                         IsTabStop="False"
                                         Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                         Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                                         ViewportSize="{TemplateBinding ViewportWidth}"
                                         Maximum="{TemplateBinding ScrollableWidth}"
                                         Minimum="0"
                                         Value="{TemplateBinding HorizontalOffset}"
                                         Margin="-1,0,-1,-1"/>

                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CustomScrollViewerStyle -->
    <Style TargetType="cc:CustomScrollViewer" x:Key="CustomScrollViewerStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:CustomScrollViewer">
                    <ScrollViewer Name="ScrollViewerElement" Style="{StaticResource MenuScrollViewerStyle}" 
                                HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <ContentPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItemStyle -->
    <Style TargetType="cc:MenuItem" x:Key="MenuItemStyle">
        <Setter Property="MenuPositioningStrategy">
            <Setter.Value>
                <cc:DefaultMenuPositioningStrategy>
                    <cc:DefaultMenuPositioningStrategy.HorizontalOffset>-8</cc:DefaultMenuPositioningStrategy.HorizontalOffset>
                    <cc:DefaultMenuPositioningStrategy.VerticalOffset>0</cc:DefaultMenuPositioningStrategy.VerticalOffset>
                    <cc:DefaultMenuPositioningStrategy.MenuHeightPadding>2</cc:DefaultMenuPositioningStrategy.MenuHeightPadding>
                </cc:DefaultMenuPositioningStrategy>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:MenuItem" >
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="HoverElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="ContentElement"
                                          Storyboard.TargetProperty="Foreground"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="Yellow">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IconElement"
                                          Storyboard.TargetProperty="RenderTransform"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" CenterX="12" CenterY="12"/>
                                                        <TranslateTransform X="-1" Y="-1"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IsExpandableElement"
                                          Storyboard.TargetProperty="Fill"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Yellow"/>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="ContentElement"
                                          Storyboard.TargetProperty="Foreground"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="Yellow">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IconElement"
                                          Storyboard.TargetProperty="RenderTransform"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="12" CenterY="12"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IsExpandableElement"
                                          Storyboard.TargetProperty="Fill"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Yellow"/>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="0.35"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="UnChecked">
                                </VisualState>
                                <VisualState x:Name="CheckedNoIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckBorderElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckmarkElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckBorderElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="NoItems">
                                </VisualState>
                                <VisualState x:Name="HasItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IsExpandableElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="0" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Visibility="Visible" Fill="Transparent"/>
                        <Border x:Name="HoverElement" Grid.Column="0" Grid.ColumnSpan="3"
                                   CornerRadius="4" Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource CM_HoverBackgroundColor}"></SolidColorBrush>
                            </Border.Background>
                        </Border>
                        <Border Margin="1 1" Grid.Column="0" x:Name="CheckBorderElement" Visibility="Collapsed"
                                    BorderThickness="1.5" CornerRadius="4">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource CM_SelectedIconBorder}"></SolidColorBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource CM_SelectedIconBackgroundColor}"></SolidColorBrush>
                            </Border.Background>
                            <!--<Border.Effect>
                                <BlurEffect></BlurEffect>
                            </Border.Effect>-->
                        </Border>
                        <Polygon Margin="2 2" Grid.Column="0" x:Name="CheckmarkElement" Visibility="Collapsed" Points="0,12 4,16 12,4 4,12 0,12"
                                Stroke="WhiteSmoke" StrokeThickness="1"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Gray">
                        </Polygon>
                        <Image Grid.Column="0" Name="IconElement" MaxHeight="24" MaxWidth="24" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill" />
                        <ContentControl Grid.Column="1" Name="ContentElement" MinHeight="30" VerticalContentAlignment="Center" Foreground="WhiteSmoke" />
                        <Polygon x:Name="IsExpandableElement" Grid.Column="2" Points="0,0 4,4 0,8" Fill="#FF505050"
                                 HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" />
                        <Popup x:Name="PopupElement" Grid.Column="3" IsOpen="false">
                            <cc:MenuScrollViewer x:Name="DependentContainerElement" Style="{StaticResource CustomScrollViewerStyle}">
                                <ItemsPresenter/>
                            </cc:MenuScrollViewer>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenuStyle -->
    <Style TargetType="cc:ContextMenu">
        <Setter Property="MenuPositioningStrategy">
            <Setter.Value>
                <cc:DefaultMenuPositioningStrategy>
                    <cc:DefaultMenuPositioningStrategy.MenuHeightPadding>2</cc:DefaultMenuPositioningStrategy.MenuHeightPadding>
                </cc:DefaultMenuPositioningStrategy>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MenuItemStyle }" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:ContextMenu">


                    <cc:MenuScrollViewer x:Name="DependentContainerElement" Style="{StaticResource CustomScrollViewerStyle}">
                        <ItemsPresenter/>
                    </cc:MenuScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
