#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Macro.ImageViewer.StudyManagement.Core.Storage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dicom_store")]
	public partial class DicomStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertStudy(Study instance);
    partial void UpdateStudy(Study instance);
    partial void DeleteStudy(Study instance);
    partial void InsertWorkItem(WorkItem instance);
    partial void UpdateWorkItem(WorkItem instance);
    partial void DeleteWorkItem(WorkItem instance);
    partial void InsertWorkItemUid(WorkItemUid instance);
    partial void UpdateWorkItemUid(WorkItemUid instance);
    partial void DeleteWorkItemUid(WorkItemUid instance);
    partial void InsertDevice(Device instance);
    partial void UpdateDevice(Device instance);
    partial void DeleteDevice(Device instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    #endregion
		
		public DicomStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Study> Studies
		{
			get
			{
				return this.GetTable<Study>();
			}
		}
		
		public System.Data.Linq.Table<WorkItem> WorkItems
		{
			get
			{
				return this.GetTable<WorkItem>();
			}
		}
		
		public System.Data.Linq.Table<WorkItemUid> WorkItemUids
		{
			get
			{
				return this.GetTable<WorkItemUid>();
			}
		}
		
		public System.Data.Linq.Table<Device> Devices
		{
			get
			{
				return this.GetTable<Device>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Study : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Data.Linq.Binary _Version;
		
		private string _SpecificCharacterSet;
		
		private string _StudyId;
		
		private System.Nullable<long> _StudyTime;
		
		private string _StudyTimeRaw;
		
		private System.Nullable<System.DateTime> _StudyDate;
		
		private string _StudyDateRaw;
		
		private string _AccessionNumber;
		
		private string _StudyInstanceUid;
		
		private string _StudyDescription;
		
		private string _ModalitiesInStudy;
		
		private string _SopClassesInStudy;
		
		private System.Nullable<int> _NumberOfStudyRelatedSeries;
		
		private System.Nullable<int> _NumberOfStudyRelatedInstances;
		
		private string _ProcedureCodeSequenceCodingSchemeDesignator;
		
		private string _ProcedureCodeSequenceCodeValue;
		
		private string _PatientsName;
		
		private string _ReferringPhysiciansName;
		
		private string _PatientId;
		
		private string _PatientsSex;
		
		private System.Nullable<System.DateTime> _PatientsBirthDate;
		
		private string _PatientsBirthDateRaw;
		
		private System.Nullable<long> _PatientsBirthTime;
		
		private string _PatientsBirthTimeRaw;
		
		private string _PatientSpeciesDescription;
		
		private string _PatientSpeciesCodeSequenceCodingSchemeDesignator;
		
		private string _PatientSpeciesCodeSequenceCodeValue;
		
		private string _PatientSpeciesCodeSequenceCodeMeaning;
		
		private string _PatientBreedDescription;
		
		private string _PatientBreedCodeSequenceCodingSchemeDesignator;
		
		private string _PatientBreedCodeSequenceCodeValue;
		
		private string _PatientBreedCodeSequenceCodeMeaning;
		
		private string _ResponsiblePerson;
		
		private string _ResponsiblePersonRole;
		
		private string _ResponsibleOrganization;
		
		private string _SourceAETitlesInStudy;
		
		private string _StationNamesInStudy;
		
		private string _InstitutionNamesInStudy;
		
		private System.Nullable<System.DateTime> _StoreTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		private bool _Deleted;
		
		private bool _Reindex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnSpecificCharacterSetChanging(string value);
    partial void OnSpecificCharacterSetChanged();
    partial void OnStudyIdChanging(string value);
    partial void OnStudyIdChanged();
    partial void OnStudyTimeTicksChanging(System.Nullable<long> value);
    partial void OnStudyTimeTicksChanged();
    partial void OnStudyTimeRawChanging(string value);
    partial void OnStudyTimeRawChanged();
    partial void OnStudyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStudyDateChanged();
    partial void OnStudyDateRawChanging(string value);
    partial void OnStudyDateRawChanged();
    partial void OnAccessionNumberChanging(string value);
    partial void OnAccessionNumberChanged();
    partial void OnStudyInstanceUidChanging(string value);
    partial void OnStudyInstanceUidChanged();
    partial void OnStudyDescriptionChanging(string value);
    partial void OnStudyDescriptionChanged();
    partial void OnModalitiesInStudyChanging(string value);
    partial void OnModalitiesInStudyChanged();
    partial void OnSopClassesInStudyChanging(string value);
    partial void OnSopClassesInStudyChanged();
    partial void OnNumberOfStudyRelatedSeriesChanging(System.Nullable<int> value);
    partial void OnNumberOfStudyRelatedSeriesChanged();
    partial void OnNumberOfStudyRelatedInstancesChanging(System.Nullable<int> value);
    partial void OnNumberOfStudyRelatedInstancesChanged();
    partial void OnProcedureCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnProcedureCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnProcedureCodeSequenceCodeValueChanging(string value);
    partial void OnProcedureCodeSequenceCodeValueChanged();
    partial void OnPatientsNameChanging(string value);
    partial void OnPatientsNameChanged();
    partial void OnReferringPhysiciansNameChanging(string value);
    partial void OnReferringPhysiciansNameChanged();
    partial void OnPatientIdChanging(string value);
    partial void OnPatientIdChanged();
    partial void OnPatientsSexChanging(string value);
    partial void OnPatientsSexChanged();
    partial void OnPatientsBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPatientsBirthDateChanged();
    partial void OnPatientsBirthDateRawChanging(string value);
    partial void OnPatientsBirthDateRawChanged();
    partial void OnPatientsBirthTimeTicksChanging(System.Nullable<long> value);
    partial void OnPatientsBirthTimeTicksChanged();
    partial void OnPatientsBirthTimeRawChanging(string value);
    partial void OnPatientsBirthTimeRawChanged();
    partial void OnPatientSpeciesDescriptionChanging(string value);
    partial void OnPatientSpeciesDescriptionChanged();
    partial void OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnPatientSpeciesCodeSequenceCodeValueChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodeValueChanged();
    partial void OnPatientSpeciesCodeSequenceCodeMeaningChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodeMeaningChanged();
    partial void OnPatientBreedDescriptionChanging(string value);
    partial void OnPatientBreedDescriptionChanged();
    partial void OnPatientBreedCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnPatientBreedCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnPatientBreedCodeSequenceCodeValueChanging(string value);
    partial void OnPatientBreedCodeSequenceCodeValueChanged();
    partial void OnPatientBreedCodeSequenceCodeMeaningChanging(string value);
    partial void OnPatientBreedCodeSequenceCodeMeaningChanged();
    partial void OnResponsiblePersonChanging(string value);
    partial void OnResponsiblePersonChanged();
    partial void OnResponsiblePersonRoleChanging(string value);
    partial void OnResponsiblePersonRoleChanged();
    partial void OnResponsibleOrganizationChanging(string value);
    partial void OnResponsibleOrganizationChanged();
    partial void OnSourceAETitlesInStudyChanging(string value);
    partial void OnSourceAETitlesInStudyChanged();
    partial void OnStationNamesInStudyChanging(string value);
    partial void OnStationNamesInStudyChanged();
    partial void OnInstitutionNamesInStudyChanging(string value);
    partial void OnInstitutionNamesInStudyChanged();
    partial void OnStoreTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStoreTimeChanged();
    partial void OnDeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteTimeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnReindexChanging(bool value);
    partial void OnReindexChanged();
    #endregion
		
		public Study()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificCharacterSet", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string SpecificCharacterSet
		{
			get
			{
				return this._SpecificCharacterSet;
			}
			set
			{
				if ((this._SpecificCharacterSet != value))
				{
					this.OnSpecificCharacterSetChanging(value);
					this.SendPropertyChanging();
					this._SpecificCharacterSet = value;
					this.SendPropertyChanged("SpecificCharacterSet");
					this.OnSpecificCharacterSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyId", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string StudyId
		{
			get
			{
				return this._StudyId;
			}
			set
			{
				if ((this._StudyId != value))
				{
					this.OnStudyIdChanging(value);
					this.SendPropertyChanging();
					this._StudyId = value;
					this.SendPropertyChanged("StudyId");
					this.OnStudyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyTime", DbType="BIGINT", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> StudyTimeTicks
		{
			get
			{
				return this._StudyTime;
			}
			set
			{
				if ((this._StudyTime != value))
				{
					this.OnStudyTimeTicksChanging(value);
					this.SendPropertyChanging();
					this._StudyTime = value;
					this.SendPropertyChanged("StudyTimeTicks");
					this.OnStudyTimeTicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyTimeRaw", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string StudyTimeRaw
		{
			get
			{
				return this._StudyTimeRaw;
			}
			set
			{
				if ((this._StudyTimeRaw != value))
				{
					this.OnStudyTimeRawChanging(value);
					this.SendPropertyChanging();
					this._StudyTimeRaw = value;
					this.SendPropertyChanged("StudyTimeRaw");
					this.OnStudyTimeRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StudyDate
		{
			get
			{
				return this._StudyDate;
			}
			set
			{
				if ((this._StudyDate != value))
				{
					this.OnStudyDateChanging(value);
					this.SendPropertyChanging();
					this._StudyDate = value;
					this.SendPropertyChanged("StudyDate");
					this.OnStudyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyDateRaw", DbType="NVarChar(26)", UpdateCheck=UpdateCheck.Never)]
		public string StudyDateRaw
		{
			get
			{
				return this._StudyDateRaw;
			}
			set
			{
				if ((this._StudyDateRaw != value))
				{
					this.OnStudyDateRawChanging(value);
					this.SendPropertyChanging();
					this._StudyDateRaw = value;
					this.SendPropertyChanged("StudyDateRaw");
					this.OnStudyDateRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessionNumber", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string AccessionNumber
		{
			get
			{
				return this._AccessionNumber;
			}
			set
			{
				if ((this._AccessionNumber != value))
				{
					this.OnAccessionNumberChanging(value);
					this.SendPropertyChanging();
					this._AccessionNumber = value;
					this.SendPropertyChanged("AccessionNumber");
					this.OnAccessionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyInstanceUid", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyDescription", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string StudyDescription
		{
			get
			{
				return this._StudyDescription;
			}
			set
			{
				if ((this._StudyDescription != value))
				{
					this.OnStudyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StudyDescription = value;
					this.SendPropertyChanged("StudyDescription");
					this.OnStudyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModalitiesInStudy", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string ModalitiesInStudy
		{
			get
			{
				return this._ModalitiesInStudy;
			}
			set
			{
				if ((this._ModalitiesInStudy != value))
				{
					this.OnModalitiesInStudyChanging(value);
					this.SendPropertyChanging();
					this._ModalitiesInStudy = value;
					this.SendPropertyChanged("ModalitiesInStudy");
					this.OnModalitiesInStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SopClassesInStudy", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string SopClassesInStudy
		{
			get
			{
				return this._SopClassesInStudy;
			}
			set
			{
				if ((this._SopClassesInStudy != value))
				{
					this.OnSopClassesInStudyChanging(value);
					this.SendPropertyChanging();
					this._SopClassesInStudy = value;
					this.SendPropertyChanged("SopClassesInStudy");
					this.OnSopClassesInStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStudyRelatedSeries", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberOfStudyRelatedSeries
		{
			get
			{
				return this._NumberOfStudyRelatedSeries;
			}
			set
			{
				if ((this._NumberOfStudyRelatedSeries != value))
				{
					this.OnNumberOfStudyRelatedSeriesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedSeries = value;
					this.SendPropertyChanged("NumberOfStudyRelatedSeries");
					this.OnNumberOfStudyRelatedSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfStudyRelatedInstances", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberOfStudyRelatedInstances
		{
			get
			{
				return this._NumberOfStudyRelatedInstances;
			}
			set
			{
				if ((this._NumberOfStudyRelatedInstances != value))
				{
					this.OnNumberOfStudyRelatedInstancesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedInstances = value;
					this.SendPropertyChanged("NumberOfStudyRelatedInstances");
					this.OnNumberOfStudyRelatedInstancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string ProcedureCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._ProcedureCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._ProcedureCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnProcedureCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._ProcedureCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("ProcedureCodeSequenceCodingSchemeDesignator");
					this.OnProcedureCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureCodeSequenceCodeValue", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string ProcedureCodeSequenceCodeValue
		{
			get
			{
				return this._ProcedureCodeSequenceCodeValue;
			}
			set
			{
				if ((this._ProcedureCodeSequenceCodeValue != value))
				{
					this.OnProcedureCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._ProcedureCodeSequenceCodeValue = value;
					this.SendPropertyChanged("ProcedureCodeSequenceCodeValue");
					this.OnProcedureCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsName", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string PatientsName
		{
			get
			{
				return this._PatientsName;
			}
			set
			{
				if ((this._PatientsName != value))
				{
					this.OnPatientsNameChanging(value);
					this.SendPropertyChanging();
					this._PatientsName = value;
					this.SendPropertyChanged("PatientsName");
					this.OnPatientsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringPhysiciansName", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ReferringPhysiciansName
		{
			get
			{
				return this._ReferringPhysiciansName;
			}
			set
			{
				if ((this._ReferringPhysiciansName != value))
				{
					this.OnReferringPhysiciansNameChanging(value);
					this.SendPropertyChanging();
					this._ReferringPhysiciansName = value;
					this.SendPropertyChanged("ReferringPhysiciansName");
					this.OnReferringPhysiciansNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsSex", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientsSex
		{
			get
			{
				return this._PatientsSex;
			}
			set
			{
				if ((this._PatientsSex != value))
				{
					this.OnPatientsSexChanging(value);
					this.SendPropertyChanging();
					this._PatientsSex = value;
					this.SendPropertyChanged("PatientsSex");
					this.OnPatientsSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsBirthDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PatientsBirthDate
		{
			get
			{
				return this._PatientsBirthDate;
			}
			set
			{
				if ((this._PatientsBirthDate != value))
				{
					this.OnPatientsBirthDateChanging(value);
					this.SendPropertyChanging();
					this._PatientsBirthDate = value;
					this.SendPropertyChanged("PatientsBirthDate");
					this.OnPatientsBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsBirthDateRaw", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientsBirthDateRaw
		{
			get
			{
				return this._PatientsBirthDateRaw;
			}
			set
			{
				if ((this._PatientsBirthDateRaw != value))
				{
					this.OnPatientsBirthDateRawChanging(value);
					this.SendPropertyChanging();
					this._PatientsBirthDateRaw = value;
					this.SendPropertyChanged("PatientsBirthDateRaw");
					this.OnPatientsBirthDateRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsBirthTime", DbType="BIGINT", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PatientsBirthTimeTicks
		{
			get
			{
				return this._PatientsBirthTime;
			}
			set
			{
				if ((this._PatientsBirthTime != value))
				{
					this.OnPatientsBirthTimeTicksChanging(value);
					this.SendPropertyChanging();
					this._PatientsBirthTime = value;
					this.SendPropertyChanged("PatientsBirthTimeTicks");
					this.OnPatientsBirthTimeTicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsBirthTimeRaw", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientsBirthTimeRaw
		{
			get
			{
				return this._PatientsBirthTimeRaw;
			}
			set
			{
				if ((this._PatientsBirthTimeRaw != value))
				{
					this.OnPatientsBirthTimeRawChanging(value);
					this.SendPropertyChanging();
					this._PatientsBirthTimeRaw = value;
					this.SendPropertyChanged("PatientsBirthTimeRaw");
					this.OnPatientsBirthTimeRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSpeciesDescription", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PatientSpeciesDescription
		{
			get
			{
				return this._PatientSpeciesDescription;
			}
			set
			{
				if ((this._PatientSpeciesDescription != value))
				{
					this.OnPatientSpeciesDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesDescription = value;
					this.SendPropertyChanged("PatientSpeciesDescription");
					this.OnPatientSpeciesDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSpeciesCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientSpeciesCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodingSchemeDesignator");
					this.OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSpeciesCodeSequenceCodeValue", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientSpeciesCodeSequenceCodeValue
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodeValue;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodeValue != value))
				{
					this.OnPatientSpeciesCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodeValue = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodeValue");
					this.OnPatientSpeciesCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSpeciesCodeSequenceCodeMeaning", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PatientSpeciesCodeSequenceCodeMeaning
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodeMeaning;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodeMeaning != value))
				{
					this.OnPatientSpeciesCodeSequenceCodeMeaningChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodeMeaning = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodeMeaning");
					this.OnPatientSpeciesCodeSequenceCodeMeaningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBreedDescription", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PatientBreedDescription
		{
			get
			{
				return this._PatientBreedDescription;
			}
			set
			{
				if ((this._PatientBreedDescription != value))
				{
					this.OnPatientBreedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedDescription = value;
					this.SendPropertyChanged("PatientBreedDescription");
					this.OnPatientBreedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBreedCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientBreedCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._PatientBreedCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnPatientBreedCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodingSchemeDesignator");
					this.OnPatientBreedCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBreedCodeSequenceCodeValue", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string PatientBreedCodeSequenceCodeValue
		{
			get
			{
				return this._PatientBreedCodeSequenceCodeValue;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodeValue != value))
				{
					this.OnPatientBreedCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodeValue = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodeValue");
					this.OnPatientBreedCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBreedCodeSequenceCodeMeaning", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PatientBreedCodeSequenceCodeMeaning
		{
			get
			{
				return this._PatientBreedCodeSequenceCodeMeaning;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodeMeaning != value))
				{
					this.OnPatientBreedCodeSequenceCodeMeaningChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodeMeaning = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodeMeaning");
					this.OnPatientBreedCodeSequenceCodeMeaningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsiblePerson", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ResponsiblePerson
		{
			get
			{
				return this._ResponsiblePerson;
			}
			set
			{
				if ((this._ResponsiblePerson != value))
				{
					this.OnResponsiblePersonChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePerson = value;
					this.SendPropertyChanged("ResponsiblePerson");
					this.OnResponsiblePersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsiblePersonRole", DbType="NVarChar(16)", UpdateCheck=UpdateCheck.Never)]
		public string ResponsiblePersonRole
		{
			get
			{
				return this._ResponsiblePersonRole;
			}
			set
			{
				if ((this._ResponsiblePersonRole != value))
				{
					this.OnResponsiblePersonRoleChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePersonRole = value;
					this.SendPropertyChanged("ResponsiblePersonRole");
					this.OnResponsiblePersonRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleOrganization", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string ResponsibleOrganization
		{
			get
			{
				return this._ResponsibleOrganization;
			}
			set
			{
				if ((this._ResponsibleOrganization != value))
				{
					this.OnResponsibleOrganizationChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleOrganization = value;
					this.SendPropertyChanged("ResponsibleOrganization");
					this.OnResponsibleOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceAETitlesInStudy", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string SourceAETitlesInStudy
		{
			get
			{
				return this._SourceAETitlesInStudy;
			}
			set
			{
				if ((this._SourceAETitlesInStudy != value))
				{
					this.OnSourceAETitlesInStudyChanging(value);
					this.SendPropertyChanging();
					this._SourceAETitlesInStudy = value;
					this.SendPropertyChanged("SourceAETitlesInStudy");
					this.OnSourceAETitlesInStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationNamesInStudy", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string StationNamesInStudy
		{
			get
			{
				return this._StationNamesInStudy;
			}
			set
			{
				if ((this._StationNamesInStudy != value))
				{
					this.OnStationNamesInStudyChanging(value);
					this.SendPropertyChanging();
					this._StationNamesInStudy = value;
					this.SendPropertyChanged("StationNamesInStudy");
					this.OnStationNamesInStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionNamesInStudy", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string InstitutionNamesInStudy
		{
			get
			{
				return this._InstitutionNamesInStudy;
			}
			set
			{
				if ((this._InstitutionNamesInStudy != value))
				{
					this.OnInstitutionNamesInStudyChanging(value);
					this.SendPropertyChanging();
					this._InstitutionNamesInStudy = value;
					this.SendPropertyChanged("InstitutionNamesInStudy");
					this.OnInstitutionNamesInStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StoreTime
		{
			get
			{
				return this._StoreTime;
			}
			set
			{
				if ((this._StoreTime != value))
				{
					this.OnStoreTimeChanging(value);
					this.SendPropertyChanging();
					this._StoreTime = value;
					this.SendPropertyChanged("StoreTime");
					this.OnStoreTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reindex", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Reindex
		{
			get
			{
				return this._Reindex;
			}
			set
			{
				if ((this._Reindex != value))
				{
					this.OnReindexChanging(value);
					this.SendPropertyChanging();
					this._Reindex = value;
					this.SendPropertyChanged("Reindex");
					this.OnReindexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WorkItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Data.Linq.Binary _Version;
		
		private System.DateTime _ProcessTime;
		
		private System.DateTime _ScheduledTime;
		
		private System.DateTime _ExpirationTime;
		
		private System.DateTime _DeleteTime;
		
		private System.DateTime _RequestedTime;
		
		private global::Macro.ImageViewer.Common.WorkItem.WorkItemStatusEnum _Status;
		
		private string _Type;
		
		private global::Macro.ImageViewer.Common.WorkItem.WorkItemPriorityEnum _Priority;
		
		private string _StudyInstanceUid;
		
		private string _SerializedPatient;
		
		private string _SerializedRequest;
		
		private int _FailureCount;
		
		private EntitySet<WorkItemUid> _WorkItemUids;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnProcessTimeChanging(System.DateTime value);
    partial void OnProcessTimeChanged();
    partial void OnScheduledTimeChanging(System.DateTime value);
    partial void OnScheduledTimeChanged();
    partial void OnExpirationTimeChanging(System.DateTime value);
    partial void OnExpirationTimeChanged();
    partial void OnDeleteTimeChanging(System.DateTime value);
    partial void OnDeleteTimeChanged();
    partial void OnRequestedTimeChanging(System.DateTime value);
    partial void OnRequestedTimeChanged();
    partial void OnStatusChanging(global::Macro.ImageViewer.Common.WorkItem.WorkItemStatusEnum value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriorityChanging(global::Macro.ImageViewer.Common.WorkItem.WorkItemPriorityEnum value);
    partial void OnPriorityChanged();
    partial void OnStudyInstanceUidChanging(string value);
    partial void OnStudyInstanceUidChanged();
    partial void OnSerializedProgressChanging(string value);
    partial void OnSerializedProgressChanged();
    partial void OnSerializedRequestChanging(string value);
    partial void OnSerializedRequestChanged();
    partial void OnFailureCountChanging(int value);
    partial void OnFailureCountChanged();
    #endregion
		
		public WorkItem()
		{
			this._WorkItemUids = new EntitySet<WorkItemUid>(new Action<WorkItemUid>(this.attach_WorkItemUids), new Action<WorkItemUid>(this.detach_WorkItemUids));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ProcessTime
		{
			get
			{
				return this._ProcessTime;
			}
			set
			{
				if ((this._ProcessTime != value))
				{
					this.OnProcessTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessTime = value;
					this.SendPropertyChanged("ProcessTime");
					this.OnProcessTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this.OnScheduledTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTime = value;
					this.SendPropertyChanged("ScheduledTime");
					this.OnScheduledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public global::Macro.ImageViewer.Common.WorkItem.WorkItemStatusEnum Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(32)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="SmallInt NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public global::Macro.ImageViewer.Common.WorkItem.WorkItemPriorityEnum Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyInstanceUid", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerializedPatient", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedProgress
		{
			get
			{
				return this._SerializedPatient;
			}
			set
			{
				if ((this._SerializedPatient != value))
				{
					this.OnSerializedProgressChanging(value);
					this.SendPropertyChanging();
					this._SerializedPatient = value;
					this.SendPropertyChanged("SerializedProgress");
					this.OnSerializedProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerializedRequest", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedRequest
		{
			get
			{
				return this._SerializedRequest;
			}
			set
			{
				if ((this._SerializedRequest != value))
				{
					this.OnSerializedRequestChanging(value);
					this.SendPropertyChanging();
					this._SerializedRequest = value;
					this.SendPropertyChanged("SerializedRequest");
					this.OnSerializedRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureCount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FailureCount
		{
			get
			{
				return this._FailureCount;
			}
			set
			{
				if ((this._FailureCount != value))
				{
					this.OnFailureCountChanging(value);
					this.SendPropertyChanging();
					this._FailureCount = value;
					this.SendPropertyChanged("FailureCount");
					this.OnFailureCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkItem_WorkItemUid", Storage="_WorkItemUids", ThisKey="Oid", OtherKey="WorkItemOid")]
		public EntitySet<WorkItemUid> WorkItemUids
		{
			get
			{
				return this._WorkItemUids;
			}
			set
			{
				this._WorkItemUids.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkItemUids(WorkItemUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkItem = this;
		}
		
		private void detach_WorkItemUids(WorkItemUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WorkItemUid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<long> _WorkItemOid;
		
		private string _SeriesInstanceUid;
		
		private string _SopInstanceUid;
		
		private bool _Complete;
		
		private System.Nullable<byte> _FailureCount;
		
		private string _File;
		
		private bool _Failed;
		
		private EntityRef<WorkItem> _WorkItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnWorkItemOidChanging(System.Nullable<long> value);
    partial void OnWorkItemOidChanged();
    partial void OnSeriesInstanceUidChanging(string value);
    partial void OnSeriesInstanceUidChanged();
    partial void OnSopInstanceUidChanging(string value);
    partial void OnSopInstanceUidChanged();
    partial void OnCompleteChanging(bool value);
    partial void OnCompleteChanged();
    partial void OnFailureCountChanging(System.Nullable<byte> value);
    partial void OnFailureCountChanged();
    partial void OnFileChanging(string value);
    partial void OnFileChanged();
    partial void OnFailedChanging(bool value);
    partial void OnFailedChanged();
    #endregion
		
		public WorkItemUid()
		{
			this._WorkItem = default(EntityRef<WorkItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkItemOid", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> WorkItemOid
		{
			get
			{
				return this._WorkItemOid;
			}
			set
			{
				if ((this._WorkItemOid != value))
				{
					if (this._WorkItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkItemOidChanging(value);
					this.SendPropertyChanging();
					this._WorkItemOid = value;
					this.SendPropertyChanged("WorkItemOid");
					this.OnWorkItemOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriesInstanceUid", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string SeriesInstanceUid
		{
			get
			{
				return this._SeriesInstanceUid;
			}
			set
			{
				if ((this._SeriesInstanceUid != value))
				{
					this.OnSeriesInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SeriesInstanceUid = value;
					this.SendPropertyChanged("SeriesInstanceUid");
					this.OnSeriesInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SopInstanceUid", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string SopInstanceUid
		{
			get
			{
				return this._SopInstanceUid;
			}
			set
			{
				if ((this._SopInstanceUid != value))
				{
					this.OnSopInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SopInstanceUid = value;
					this.SendPropertyChanged("SopInstanceUid");
					this.OnSopInstanceUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureCount", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> FailureCount
		{
			get
			{
				return this._FailureCount;
			}
			set
			{
				if ((this._FailureCount != value))
				{
					this.OnFailureCountChanging(value);
					this.SendPropertyChanging();
					this._FailureCount = value;
					this.SendPropertyChanged("FailureCount");
					this.OnFailureCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File", DbType="NVarChar(128)", UpdateCheck=UpdateCheck.Never)]
		public string File
		{
			get
			{
				return this._File;
			}
			set
			{
				if ((this._File != value))
				{
					this.OnFileChanging(value);
					this.SendPropertyChanging();
					this._File = value;
					this.SendPropertyChanged("File");
					this.OnFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Failed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Failed
		{
			get
			{
				return this._Failed;
			}
			set
			{
				if ((this._Failed != value))
				{
					this.OnFailedChanging(value);
					this.SendPropertyChanging();
					this._Failed = value;
					this.SendPropertyChanged("Failed");
					this.OnFailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkItem_WorkItemUid", Storage="_WorkItem", ThisKey="WorkItemOid", OtherKey="Oid", IsForeignKey=true)]
		public WorkItem WorkItem
		{
			get
			{
				return this._WorkItem.Entity;
			}
			set
			{
				WorkItem previousValue = this._WorkItem.Entity;
				if (((previousValue != value) 
							|| (this._WorkItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkItem.Entity = null;
						previousValue.WorkItemUids.Remove(this);
					}
					this._WorkItem.Entity = value;
					if ((value != null))
					{
						value.WorkItemUids.Add(this);
						this._WorkItemOid = value.Oid;
					}
					else
					{
						this._WorkItemOid = default(Nullable<long>);
					}
					this.SendPropertyChanged("WorkItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Name;
		
		private string _Description;
		
		private string _Location;
		
		private string _AETitle;
		
		private string _HostName;
		
		private int _Port;
		
		private System.Nullable<int> _StreamingHeaderPort;
		
		private System.Nullable<int> _StreamingImagePort;
		
		private bool _IsPriorsServer;
		
		private string _ExtensionData;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAETitleChanging(string value);
    partial void OnAETitleChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnPortChanging(int value);
    partial void OnPortChanged();
    partial void OnStreamingHeaderPortChanging(System.Nullable<int> value);
    partial void OnStreamingHeaderPortChanged();
    partial void OnStreamingImagePortChanging(System.Nullable<int> value);
    partial void OnStreamingImagePortChanged();
    partial void OnIsPriorsServerChanging(bool value);
    partial void OnIsPriorsServerChanged();
    partial void OnExtensionDataChanging(string value);
    partial void OnExtensionDataChanged();
    #endregion
		
		public Device()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(64) NULL", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(64) NULL", UpdateCheck=UpdateCheck.Never)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AETitle", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AETitle
		{
			get
			{
				return this._AETitle;
			}
			set
			{
				if ((this._AETitle != value))
				{
					this.OnAETitleChanging(value);
					this.SendPropertyChanging();
					this._AETitle = value;
					this.SendPropertyChanged("AETitle");
					this.OnAETitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreamingHeaderPort", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StreamingHeaderPort
		{
			get
			{
				return this._StreamingHeaderPort;
			}
			set
			{
				if ((this._StreamingHeaderPort != value))
				{
					this.OnStreamingHeaderPortChanging(value);
					this.SendPropertyChanging();
					this._StreamingHeaderPort = value;
					this.SendPropertyChanged("StreamingHeaderPort");
					this.OnStreamingHeaderPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreamingImagePort", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StreamingImagePort
		{
			get
			{
				return this._StreamingImagePort;
			}
			set
			{
				if ((this._StreamingImagePort != value))
				{
					this.OnStreamingImagePortChanging(value);
					this.SendPropertyChanging();
					this._StreamingImagePort = value;
					this.SendPropertyChanged("StreamingImagePort");
					this.OnStreamingImagePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPriorsServer", DbType="BIT NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsPriorsServer
		{
			get
			{
				return this._IsPriorsServer;
			}
			set
			{
				if ((this._IsPriorsServer != value))
				{
					this.OnIsPriorsServerChanging(value);
					this.SendPropertyChanging();
					this._IsPriorsServer = value;
					this.SendPropertyChanged("IsPriorsServer");
					this.OnIsPriorsServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionData", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ExtensionData
		{
			get
			{
				return this._ExtensionData;
			}
			set
			{
				if ((this._ExtensionData != value))
				{
					this.OnExtensionDataChanging(value);
					this.SendPropertyChanging();
					this._ExtensionData = value;
					this.SendPropertyChanged("ExtensionData");
					this.OnExtensionDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Name;
		
		private string _Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", AutoSync=AutoSync.OnInsert, DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
