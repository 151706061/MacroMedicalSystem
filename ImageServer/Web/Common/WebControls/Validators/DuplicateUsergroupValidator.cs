#region License

// Copyright (c) 2011, ClearCanvas Inc.
// All rights reserved.
// http://www.ClearCanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.ClearCanvas.ca/OSLv3.0

#endregion

using System;
using System.Web.UI.WebControls;
using Macro.ImageServer.Web.Common.Data;

namespace Macro.ImageServer.Web.Common.WebControls.Validators
{
    /// <summary>
    /// Validate a Web UI input control containing a username.
    /// </summary>
    /// <remarks>
    /// This validator checks whether the username entered already exists.
    /// </remarks>
    /// 
    /// <example>
    /// <para>
    /// The following block adds validation for the filesystem path using a web service ValidateFilesystemPath 
    /// located at /Services/ValidationServices.asmx (relative to the current web site). 
    /// The parameter(s) is generated by the javascript script function ValidationFilesystemPathParams(). 
    /// </para>
    /// <para>
    /// If the path is not valid, the error indicator control InvalidInputIndicator will show up on the screen.
    /// </para>
    /// <code>
    ///  
    ///  function ValidationUserGroupParams()
    ///  {
    ///     input = document.getElementById('" + GroupNameTextBox.ClientID + @"');
    ///     params = new Array();
    ///     params.path = input.value;
    ///
    ///     return params;
    ///  }
    /// 
    /// </code>
    /// 
    /// <code>
    /// <uc1:InvalidInputIndicator ID="InvalidPathHint" runat="server" 
    ///     ImageUrl="~/images/icons/HelpSmall.png"
    ///     Visible="true"/>
    ///                                                        
    /// <Macro:FilesystemPathValidator runat="server" ID="PathValidator" 
    ///         ControlToValidate="PathTextBox"
    ///         InputName="Filesystem Path" 
    ///         InvalidInputColor="#FAFFB5" 
    ///         InvalidInputIndicatorID="InvalidPathHint"
    ///         ServicePath="/Services/ValidationServices.asmx" 
    ///         ServiceOperation="ValidateFilesystemPath"
    ///         ParamsFunction="ValidationFilesystemPathParams" 
    ///         ErrorMessage="Invalid path"
    ///         Display="None" ValidationGroup="vg1"/> 
    /// </code>
    /// </example>
    public class DuplicateUsergroupValidator : WebServiceValidator
    {
        #region Protected Methods

        protected override bool OnServerSideEvaluate()
        {
            String groupName = GetControlValidationValue("GroupName");
            String originalgroupName = ((HiddenField) FindControl("OriginalGroupName")).Value;

            if (String.IsNullOrEmpty(groupName))
            {
                ErrorMessage = ValidationErrors.UserGroupCannotBeEmpty;
                return false;
            }

            var controller = new UserManagementController();

            if (controller.ExistsUsergroup(groupName) && !groupName.Equals(originalgroupName))
            {
                ErrorMessage = string.Format(ValidationErrors.UserGroupAlreadyExists, groupName);
                return false;
            }

            return true;
        }

        #endregion Protected Methods
    }
}