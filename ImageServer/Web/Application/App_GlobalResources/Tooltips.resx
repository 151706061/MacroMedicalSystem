<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminFilesystem_DiskUsage" xml:space="preserve">
    <value>Current Usage   : {0}%
High Watermark : {1}%
Low Watermark  : {2}%</value>
  </data>
  <data name="AdminPartition_AddEditDialog_AcceptAnyDevice" xml:space="preserve">
    <value>Accept DICOM Associations from any device to this partition.</value>
  </data>
  <data name="AdminPartition_AddEditDialog_AETitle" xml:space="preserve">
    <value>The DICOM Application Entity Title for the partition.</value>
  </data>
  <data name="AdminPartition_AddEditDialog_AutoInsertDevices" xml:space="preserve">
    <value>Automatically add devices when they connect to this partition.</value>
  </data>
  <data name="AdminPartition_AddEditDialog_Description" xml:space="preserve">
    <value>A textual description of the partition.</value>
  </data>
  <data name="AdminPartition_AddEditDialog_DuplicateObjectPolicy" xml:space="preserve">
    <value>A policy for dealing with duplication DICOM objects received by the partition.</value>
  </data>
  <data name="AdminPartition_AddEditDialog_PartitionFolderName" xml:space="preserve">
    <value>A unique folder name to store images within for the partition. A folder with this name will be created in each filesystem.</value>
  </data>
  <data name="DeviceFeatures_AcceptKOPRFeature" xml:space="preserve">
    <value>This device can send Accept Key/Object Presentation States objects to ImageServer</value>
  </data>
  <data name="DeviceFeatures_AutoRoute" xml:space="preserve">
    <value>ImageServer can auto-route images to this device</value>
  </data>
  <data name="DeviceFeatures_Query" xml:space="preserve">
    <value>This device can query ImageServer</value>
  </data>
  <data name="DeviceFeatures_Retrieve" xml:space="preserve">
    <value>This device can retrieve images from ImageServer</value>
  </data>
  <data name="DeviceFeatures_Store" xml:space="preserve">
    <value>This device can send DICOM images to ImageServer</value>
  </data>
  <data name="SearchByAccessionNumber" xml:space="preserve">
    <value>Search the list by Accession Number</value>
  </data>
  <data name="SearchByDescription" xml:space="preserve">
    <value>Search the list by Study Description</value>
  </data>
  <data name="SearchByHostname" xml:space="preserve">
    <value>Search by hostname</value>
  </data>
  <data name="SearchByLogContent" xml:space="preserve">
    <value>Search by log content</value>
  </data>
  <data name="SearchByLogDate" xml:space="preserve">
    <value>Search by log date</value>
  </data>
  <data name="SearchByPatientID" xml:space="preserve">
    <value>Search the list by Patient Id</value>
  </data>
  <data name="SearchByPatientName" xml:space="preserve">
    <value>Search the list by Patient Name</value>
  </data>
  <data name="SearchByPersonWhoDeletedStudies" xml:space="preserve">
    <value>Search studies deleted by particular users</value>
  </data>
  <data name="SearchByProcessingServer" xml:space="preserve">
    <value>Search the list by processing server</value>
  </data>
  <data name="SearchByRefPhysician" xml:space="preserve">
    <value>Search the list by Referring Physician</value>
  </data>
  <data name="SearchByScheduledDate" xml:space="preserve">
    <value>Search the list by scheduled date</value>
  </data>
  <data name="SearchByStatus" xml:space="preserve">
    <value>Search the list by status</value>
  </data>
  <data name="SearchByStudyDate" xml:space="preserve">
    <value>Search the list by Study Date</value>
  </data>
  <data name="SearchByThread" xml:space="preserve">
    <value>Search by thread</value>
  </data>
  <data name="ServerPartitionAddEditDialog_AuditDeleteStudy" xml:space="preserve">
    <value>Deleted studies can be viewed and permanently deleted on the "Deleted Studies" page.</value>
  </data>
  <data name="WorkQueueIsStuck" xml:space="preserve">
    <value>There does not seem to be any activity for this item. The server may not be running or there is a problem with this entry.</value>
  </data>
  <data name="SearchByApplyTime" xml:space="preserve">
    <value>Search by apply time</value>
  </data>
  <data name="SearchByType" xml:space="preserve">
    <value>Search by type</value>
  </data>
  <data name="ShowOtherNameFormats" xml:space="preserve">
    <value>Show name in other formats</value>
  </data>
  <data name="AdminRules_AddEditDialog_Default" xml:space="preserve">
    <value>Default rule applied if no other rules of the type apply to a DICOM message/study.</value>
  </data>
  <data name="AdminRules_AddEditDialog_Enabled" xml:space="preserve">
    <value>Enable/Disable the rule</value>
  </data>
  <data name="AdminRules_AddEditDialog_Exempt" xml:space="preserve">
    <value>Rule that specifies DICOM messages or studies that are exempt from the rule.</value>
  </data>
  <data name="SearchByAeDescription" xml:space="preserve">
    <value>Search the list by Description</value>
  </data>
  <data name="SearchByAETitle" xml:space="preserve">
    <value>Search by Application Entity (AE) Title</value>
  </data>
  <data name="SearchByIpAddress" xml:space="preserve">
    <value>Search the list by IP Address</value>
  </data>
  <data name="SearchByResponsibleOrganization" xml:space="preserve">
    <value>Search the list by organization (Responsible Organization)</value>
  </data>
  <data name="SearchByResponsiblePerson" xml:space="preserve">
    <value>Search the list by owner (Responsible Person)</value>
  </data>
  <data name="AdminPartition_AddEditDialog_AcceptLatestReport" xml:space="preserve">
    <value>Enable/Disable always replacing duplicate reports with the latest received.  When enabled, the duplicate SOP policy is overridden. </value>
  </data>
</root>