#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.ClearCanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the Macro.Model.SqlServer.CodeGenerator project.

namespace Macro.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using Macro.Enterprise.Core;
    using Macro.ImageServer.Enterprise;

    public partial class RestoreQueueSelectCriteria : EntitySelectCriteria
    {
        public RestoreQueueSelectCriteria()
        : base("RestoreQueue")
        {}
        public RestoreQueueSelectCriteria(RestoreQueueSelectCriteria other)
        : base(other)
        {}
        public override object Clone()
        {
            return new RestoreQueueSelectCriteria(this);
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ArchiveStudyStorageGUID")]
        public ISearchCondition<ServerEntityKey> ArchiveStudyStorageKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("ArchiveStudyStorageKey"))
              {
                 SubCriteria["ArchiveStudyStorageKey"] = new SearchCondition<ServerEntityKey>("ArchiveStudyStorageKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["ArchiveStudyStorageKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="StudyStorageGUID")]
        public ISearchCondition<ServerEntityKey> StudyStorageKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyStorageKey"))
              {
                 SubCriteria["StudyStorageKey"] = new SearchCondition<ServerEntityKey>("StudyStorageKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["StudyStorageKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ScheduledTime")]
        public ISearchCondition<DateTime> ScheduledTime
        {
            get
            {
              if (!SubCriteria.ContainsKey("ScheduledTime"))
              {
                 SubCriteria["ScheduledTime"] = new SearchCondition<DateTime>("ScheduledTime");
              }
              return (ISearchCondition<DateTime>)SubCriteria["ScheduledTime"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="RestoreQueueStatusEnum")]
        public ISearchCondition<RestoreQueueStatusEnum> RestoreQueueStatusEnum
        {
            get
            {
              if (!SubCriteria.ContainsKey("RestoreQueueStatusEnum"))
              {
                 SubCriteria["RestoreQueueStatusEnum"] = new SearchCondition<RestoreQueueStatusEnum>("RestoreQueueStatusEnum");
              }
              return (ISearchCondition<RestoreQueueStatusEnum>)SubCriteria["RestoreQueueStatusEnum"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ProcessorId")]
        public ISearchCondition<String> ProcessorId
        {
            get
            {
              if (!SubCriteria.ContainsKey("ProcessorId"))
              {
                 SubCriteria["ProcessorId"] = new SearchCondition<String>("ProcessorId");
              }
              return (ISearchCondition<String>)SubCriteria["ProcessorId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="FailureDescription")]
        public ISearchCondition<String> FailureDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("FailureDescription"))
              {
                 SubCriteria["FailureDescription"] = new SearchCondition<String>("FailureDescription");
              }
              return (ISearchCondition<String>)SubCriteria["FailureDescription"];
            } 
        }
    }
}
