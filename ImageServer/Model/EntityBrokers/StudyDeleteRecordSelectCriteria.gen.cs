#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.ClearCanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

// This file is auto-generated by the Macro.Model.SqlServer.CodeGenerator project.

namespace Macro.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using Macro.Enterprise.Core;
    using Macro.ImageServer.Enterprise;

    public partial class StudyDeleteRecordSelectCriteria : EntitySelectCriteria
    {
        public StudyDeleteRecordSelectCriteria()
        : base("StudyDeleteRecord")
        {}
        public StudyDeleteRecordSelectCriteria(StudyDeleteRecordSelectCriteria other)
        : base(other)
        {}
        public override object Clone()
        {
            return new StudyDeleteRecordSelectCriteria(this);
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="StudyInstanceUid")]
        public ISearchCondition<String> StudyInstanceUid
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyInstanceUid"))
              {
                 SubCriteria["StudyInstanceUid"] = new SearchCondition<String>("StudyInstanceUid");
              }
              return (ISearchCondition<String>)SubCriteria["StudyInstanceUid"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="Timestamp")]
        public ISearchCondition<DateTime> Timestamp
        {
            get
            {
              if (!SubCriteria.ContainsKey("Timestamp"))
              {
                 SubCriteria["Timestamp"] = new SearchCondition<DateTime>("Timestamp");
              }
              return (ISearchCondition<DateTime>)SubCriteria["Timestamp"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="ServerPartitionAE")]
        public ISearchCondition<String> ServerPartitionAE
        {
            get
            {
              if (!SubCriteria.ContainsKey("ServerPartitionAE"))
              {
                 SubCriteria["ServerPartitionAE"] = new SearchCondition<String>("ServerPartitionAE");
              }
              return (ISearchCondition<String>)SubCriteria["ServerPartitionAE"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="FilesystemGUID")]
        public ISearchCondition<ServerEntityKey> FilesystemKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("FilesystemKey"))
              {
                 SubCriteria["FilesystemKey"] = new SearchCondition<ServerEntityKey>("FilesystemKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["FilesystemKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="BackupPath")]
        public ISearchCondition<String> BackupPath
        {
            get
            {
              if (!SubCriteria.ContainsKey("BackupPath"))
              {
                 SubCriteria["BackupPath"] = new SearchCondition<String>("BackupPath");
              }
              return (ISearchCondition<String>)SubCriteria["BackupPath"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="Reason")]
        public ISearchCondition<String> Reason
        {
            get
            {
              if (!SubCriteria.ContainsKey("Reason"))
              {
                 SubCriteria["Reason"] = new SearchCondition<String>("Reason");
              }
              return (ISearchCondition<String>)SubCriteria["Reason"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="AccessionNumber")]
        public ISearchCondition<String> AccessionNumber
        {
            get
            {
              if (!SubCriteria.ContainsKey("AccessionNumber"))
              {
                 SubCriteria["AccessionNumber"] = new SearchCondition<String>("AccessionNumber");
              }
              return (ISearchCondition<String>)SubCriteria["AccessionNumber"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="PatientId")]
        public ISearchCondition<String> PatientId
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientId"))
              {
                 SubCriteria["PatientId"] = new SearchCondition<String>("PatientId");
              }
              return (ISearchCondition<String>)SubCriteria["PatientId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="PatientsName")]
        public ISearchCondition<String> PatientsName
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsName"))
              {
                 SubCriteria["PatientsName"] = new SearchCondition<String>("PatientsName");
              }
              return (ISearchCondition<String>)SubCriteria["PatientsName"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="StudyId")]
        public ISearchCondition<String> StudyId
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyId"))
              {
                 SubCriteria["StudyId"] = new SearchCondition<String>("StudyId");
              }
              return (ISearchCondition<String>)SubCriteria["StudyId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="StudyDescription")]
        public ISearchCondition<String> StudyDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDescription"))
              {
                 SubCriteria["StudyDescription"] = new SearchCondition<String>("StudyDescription");
              }
              return (ISearchCondition<String>)SubCriteria["StudyDescription"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="StudyDate")]
        public ISearchCondition<String> StudyDate
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDate"))
              {
                 SubCriteria["StudyDate"] = new SearchCondition<String>("StudyDate");
              }
              return (ISearchCondition<String>)SubCriteria["StudyDate"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="StudyTime")]
        public ISearchCondition<String> StudyTime
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyTime"))
              {
                 SubCriteria["StudyTime"] = new SearchCondition<String>("StudyTime");
              }
              return (ISearchCondition<String>)SubCriteria["StudyTime"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="ArchiveInfo")]
        public ISearchCondition<XmlDocument> ArchiveInfo
        {
            get
            {
              if (!SubCriteria.ContainsKey("ArchiveInfo"))
              {
                 SubCriteria["ArchiveInfo"] = new SearchCondition<XmlDocument>("ArchiveInfo");
              }
              return (ISearchCondition<XmlDocument>)SubCriteria["ArchiveInfo"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyDeleteRecord", ColumnName="ExtendedInfo")]
        public ISearchCondition<String> ExtendedInfo
        {
            get
            {
              if (!SubCriteria.ContainsKey("ExtendedInfo"))
              {
                 SubCriteria["ExtendedInfo"] = new SearchCondition<String>("ExtendedInfo");
              }
              return (ISearchCondition<String>)SubCriteria["ExtendedInfo"];
            } 
        }
    }
}
