; Script generated by the HM NIS Edit Script Wizard.

; defines required for upgrade process
; the '1 ##VERSION string is used by the build script as a token
!define MAJOR_VERSION 1 ##MAJOR
!define MINOR_VERSION 1 ##MINOR
!define BUILD 1 ##BUILDNUMBER
!define REVISION 1 ##REVISIONNUMBER

; define for build process
; the "RisClient" ##VERSION string is used by the build script as a token
!define DISTRIBUTION "RisClient_FullViewer" ##DISTRIBUTION

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "ClearCanvas SDK"
!define PRODUCT_PUBLISHER "ClearCanvas Inc"
!define PRODUCT_WEB_SITE "http://www.clearcanvas.ca"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

!ifdef OFFICIALRELEASEBUILD
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_STARTMENU_FOLDER "$SMPROGRAMS\ClearCanvas\${PRODUCT_NAME}"
!define PRODUCT_SHORTCUT_NAME "${PRODUCT_NAME}"
!else
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME} ${RELEASELABEL}"
!define PRODUCT_STARTMENU_FOLDER "$SMPROGRAMS\ClearCanvas\${PRODUCT_NAME} ${RELEASELABEL}"
!define PRODUCT_SHORTCUT_NAME "${PRODUCT_NAME} ${RELEASELABEL}"
!endif

!ifdef RELEASELABEL
  !define PRODUCT_VERSION "${MAJOR_VERSION}.${MINOR_VERSION} ${RELEASELABEL}"
!else
!define PRODUCT_VERSION "${MAJOR_VERSION}.${MINOR_VERSION}"
!endif

!define INSTALLER_DISPLAY_NAME "${PRODUCT_NAME} ${PRODUCT_VERSION}"

!define PRODUCT_GETCODEWIKIPAGE "https://trac.clearcanvas.ca/source/wiki/GettingTheCode"
;define for common NSISIncludes Path
!define NSISINCLUDES "..\..\NSISIncludes"

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "${NSISIncludes}\AddToPath.nsh"
!include "${NSISIncludes}\HandlePriorInstall.nsh"
!include "${NSISIncludes}\VisualStudioTemplates.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\..\..\..\License.rtf"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${INSTALLER_DISPLAY_NAME}"
OutFile "ClearCanvas SDK.exe"
InstallDir "$PROGRAMFILES\ClearCanvas\SDK\${PRODUCT_VERSION}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Function .onInit
  ; Check for prior or conflicting versions and prompt to uninstall them before continuing
  Push "bin\redistributable\ClearCanvas.Desktop.Executable.exe" ;version determining assembly
  GetFunctionAddress $R0 InstalledVersionLower
  Push $R0
  GetFunctionAddress $R0 SameVersionInstalled
  Push $R0
  GetFunctionAddress $R0 InstalledVersionHigher
  Push $R0
  GetFunctionAddress $R0 FailedUninstall
  Push $R0
  Call HandlePriorInstall
FunctionEnd

; use this macro to find *any* .NET SDK
!macro CC_FIND_DOT_NET_SDK out_path
   ReadRegStr ${out_path} HKLM "Software\Microsoft\Microsoft SDKs\Windows\v7.0A\" "InstallationFolder" ; find Windows SDK 7 (VS2010)
   StrCmp ${out_path} "" "" +2
   ReadRegStr ${out_path} HKLM "Software\Microsoft\Microsoft SDKs\Windows\v6.0A\" "InstallationFolder" ; find Windows SDK 6 (VS2008)
   StrCmp ${out_path} "" "" +2
   ReadRegStr ${out_path} HKLM "Software\Microsoft\Microsoft SDKs\.NETFramework\v2.0\" "InstallationFolder" ; find .NET 2.0 (VS2005)
!macroend

Section "installdir" SEC01
  SetOutPath "$INSTDIR\bin"
  SetOverwrite ifnewer
  File "..\..\..\..\Utilities\CCDevCopy\bin\Release\CCDevCopy.exe"
SectionEnd

Section "bin" SEC02
  SetOutPath "$INSTDIR\bin\redistributable"
  SetOverwrite ifnewer
  File /r /x *.svn* /x *.Ris.* /x *.Enterprise.* "..\..\..\Build\${DISTRIBUTION}\Release\*.*"
SectionEnd

Section "folders" SEC03
  CreateDirectory "$INSTDIR\bin\redistributable\badfiles"
  CreateDirectory "$INSTDIR\bin\redistributable\dicom_interim"
  CreateDirectory "$INSTDIR\bin\redistributable\filestore"
SectionEnd

Section "item_templates" SEC04
  SetOutPath "$INSTDIR\bin\vstemplates\item_templates"
  File /r /x *.svn* "..\..\..\..\Distribution\VSTemplates\TemplateZips\ItemTemplates\*.*"
SectionEnd

Section "project_templates" SEC05
  SetOutPath "$INSTDIR\bin\vstemplates\project_templates"
  File /r /x *.svn* "..\..\..\..\Distribution\VSTemplates\TemplateZips\ProjectTemplates\*.*"
SectionEnd

Section "vswizards" SEC06
  SetOutPath "$INSTDIR\bin\vswizards"
  File /r /x *.svn* "..\..\..\..\Distribution\VSTemplates\TemplateZips\ClearCanvas.VSWizards.dll"
SectionEnd

Section "docs" SEC07
  SetOutPath "$INSTDIR\docs"
  SetShellVarContext all
  File "..\..\..\..\Docs\DevelopersGuide\CCDevelopersGuide.chm"
  CreateDirectory "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}"
  CreateShortCut "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Developers Guide.lnk" "$INSTDIR\docs\CCDevelopersGuide.chm"
  File "..\..\..\..\Docs\FrameworkReference\CCFrameworkReference.chm"
  CreateShortCut "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Framework Reference.lnk" "$INSTDIR\docs\CCFrameworkReference.chm"
SectionEnd

Section "samples" SEC08
  SetShellVarContext all
  SetOutPath "$INSTDIR\samples"
  WriteIniStr "$INSTDIR\\samples\\Getting The Code.url" "InternetShortcut" "URL" "${PRODUCT_GETCODEWIKIPAGE}"
  CreateDirectory "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Samples"
  CreateShortCut "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Samples\Getting The Code.lnk" "$INSTDIR\samples\Getting The Code.url"
SectionEnd

Section "addToPath" SEC09
  ;add $INSTDIR\bin folder to the path variable
  Push $INSTDIR\bin
  Call AddToPath
SectionEnd

Section "deployTemplates" SEC10
   Push $R9
   Push $0
   
   StrCpy $0 ""

   ; deploy templates to any Visual Studio or VC# Express installation that we can find
   !insertmacro CC_ENUM_VCS_PROJTEMPLATES
deployProjectTemplatesTop:
   Pop $R9
   StrCmp $R9 "" deployProjectTemplatesEnd
   CreateDirectory "$R9\${PRODUCT_NAME}"
   CopyFiles "$INSTDIR\bin\vstemplates\project_templates\*.*" "$R9\${PRODUCT_NAME}"
   StrCpy $0 "True"
   Goto deployProjectTemplatesTop
deployProjectTemplatesEnd:

   !insertmacro CC_ENUM_VCS_ITEMTEMPLATES
deployItemTemplatesTop:
   Pop $R9
   StrCmp $R9 "" deployItemTemplatesEnd
   CreateDirectory "$R9\${PRODUCT_NAME}"
   CopyFiles "$INSTDIR\bin\vstemplates\item_templates\*.*" "$R9\${PRODUCT_NAME}"
   StrCpy $0 "True"
   Goto deployItemTemplatesTop
deployItemTemplatesEnd:
   
   StrCmp $0 "" 0 +2
   MessageBox MB_OK "The ClearCanvas Project and Item Templates could not automatically be deployed.  This is most likely because a compatible version of Visual Studio or Visual C# Express is not yet installed.  $\nThey can be found in this directory later on: '$INSTDIR\bin\vstemplates'"
   
   Pop $0
   Pop $R9
SectionEnd

Section "registerWizard" SEC11
   !insertmacro CC_FIND_DOT_NET_SDK $0
   StrCmp $0 "" noGacutilFound

   IfFileExists "$0\bin\gacutil.exe" "" noGacutilFound
      nsExec::Exec '"$0\bin\gacutil.exe" /ir "$INSTDIR\bin\vswizards\ClearCanvas.VSWizards.dll" UNINSTALL_KEY "${PRODUCT_NAME}" "${PRODUCT_NAME}"'
   Return
   
   noGacutilFound:
   MessageBox MB_OK "ClearCanvas Visual Studio Wizard could not be registered.  Please manually add ClearCanvas.VSWizards.dll to the Global Assembly Cache.  $\n The assmebly has been placed here: $\n '$INSTDIR\bin\vswizards\ClearCanvas.VSWizards.dll'"
   Return
SectionEnd

Section -AdditionalIcons
  SetShellVarContext all
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\ClearCanvas Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Uninstall ${PRODUCT_NAME} ${PRODUCT_VERSION}.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\bin\ClearCanvas.Desktop.Executable.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

##HandlePriorInstall Callback functions
Function InstalledVersionHigher
  MessageBox MB_OK|MB_ICONSTOP \
  "The Installer has detected that a NEWER version of ${PRODUCT_NAME} is already installed. $\n$\nTo continue with this installation please first uninstall ${PRODUCT_NAME}."
  Abort
FunctionEnd

Function SameVersionInstalled
  MessageBox MB_OK|MB_ICONSTOP \
  "The Installer has detected that the SAME version of ${PRODUCT_NAME} is already installed. $\n$\nTo continue with this installation please first uninstall ${PRODUCT_NAME}."
  Abort
FunctionEnd

Function InstalledVersionLower
  MessageBox MB_OKCANCEL|MB_ICONEXCLAMATION \
  "Installer has detected that an older ${PRODUCT_NAME} version is already installed. $\n$\nClick `OK` to proceed with removing this version or `Cancel` to cancel this upgrade." \
  IDOK +2
    Abort
FunctionEnd

Function FailedUninstall
  MessageBox MB_OK|MB_ICONSTOP "Installation cannot proceed because there was a problem with the uninstall of the previous version."
  Abort
FunctionEnd
##End of HandlePriorInstall Callback functions

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  ; get directory of .NET SDK installation
  !insertmacro CC_FIND_DOT_NET_SDK $0
  StrCmp $0 "" +2
  nsExec::Exec '"$0\bin\gacutil.exe" /ur "ClearCanvas.VSWizards,Version=${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD}.${REVISION}" UNINSTALL_KEY "${PRODUCT_NAME}" "${PRODUCT_NAME}"'

  ; remove our templates from any Visual Studio or VC# Express installation that we can find
  !insertmacro CC_ENUM_VCS_PROJTEMPLATES
removeProjectTemplatesTop:
  Pop $R9
  StrCmp $R9 "" removeProjectTemplatesEnd
  RMDir /r "$R9\${PRODUCT_NAME}"
  Goto removeProjectTemplatesTop
removeProjectTemplatesEnd:

  !insertmacro CC_ENUM_VCS_ITEMTEMPLATES
removeItemTemplatesTop:
  Pop $R9
  StrCmp $R9 "" removeItemTemplatesEnd
  RMDir /r "$R9\${PRODUCT_NAME}"
  Goto removeItemTemplatesTop
removeItemTemplatesEnd:
  
  Push $INSTDIR\bin
  Call un.RemoveFromPath

  SetShellVarContext all
  
  RMDir /r "$INSTDIR\bin\redistributable"
  RMDir /r "$INSTDIR\bin\vstemplates\item_templates"
  RMDir /r "$INSTDIR\bin\vstemplates\project_templates"
  RMDir /r "$INSTDIR\bin\vswizards"
  RMDir /r "$INSTDIR\bin\"
  RMDir /r "$INSTDIR\samples"
  RMDir /r "$INSTDIR\docs"
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"

  Delete "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Uninstall ${PRODUCT_NAME} ${PRODUCT_VERSION}.lnk"
  Delete "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\ClearCanvas Website.lnk"
  Delete "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Framework Reference.lnk"
  Delete "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Developers Guide.lnk"
  Delete "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Samples\*.*"
  RMDir "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}\Samples"

  RMDir "$SMPROGRAMS\ClearCanvas\SDK\${PRODUCT_VERSION}"
  RMDir "$SMPROGRAMS\ClearCanvas\SDK\"
  RMDir "$SMPROGRAMS\ClearCanvas"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
SectionEnd
