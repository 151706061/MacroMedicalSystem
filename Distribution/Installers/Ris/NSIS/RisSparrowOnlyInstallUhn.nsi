; Script generated by the HM NIS Edit Script Wizard.

; defines required for upgrade process
; the '1 ##VERSION string is used by the build script as a token
!define MAJOR_VERSION 1 ##MAJOR
!define MINOR_VERSION 1 ##MINOR
!define BUILD 1 ##BUILDNUMBER
!define REVISION 1 ##REVISIONNUMBER

!define PRODUCT_NAME "ClearCanvas Ris Sparrow Shredhost"
!define PRODUCT_VERSION "${MAJOR_VERSION}.${MINOR_VERSION}"
!define PRODUCT_PUBLISHER "ClearCanvas Inc"
!define PRODUCT_WEB_SITE "http://www.clearcanvas.ca"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

!ifdef OFFICIALRELEASEBUILD
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_STARTMENU_FOLDER "$SMPROGRAMS\ClearCanvas\${PRODUCT_NAME}"
!define PRODUCT_SERVICE_NAME "${PRODUCT_NAME} Shred Host Service"
!define PRODUCT_SHORTCUT_NAME "${PRODUCT_NAME}"
!define PRODUCT_INSTALL_DIR "${PLATFORM_PROGRAMFILES}\ClearCanvas\${PRODUCT_NAME}"
!else
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME} ${RELEASELABEL}"
!define PRODUCT_STARTMENU_FOLDER "$SMPROGRAMS\ClearCanvas\${PRODUCT_NAME} ${RELEASELABEL}"
!define PRODUCT_SERVICE_NAME "${PRODUCT_NAME} Shred Host Service ${RELEASELABEL}"
!define PRODUCT_SHORTCUT_NAME "${PRODUCT_NAME} ${RELEASELABEL}"
!define PRODUCT_INSTALL_DIR "${PLATFORM_PROGRAMFILES}\ClearCanvas\${PRODUCT_NAME} ${RELEASELABEL}"
!endif

!ifdef RELEASELABEL
  !define INSTALLER_DISPLAY_NAME "${PRODUCT_NAME} ${PRODUCT_VERSION} ${RELEASELABEL}"
!else
  !define INSTALLER_DISPLAY_NAME "${PRODUCT_NAME} ${PRODUCT_VERSION}"
!endif

;define for common NSISIncludes Path
!define NSISINCLUDES "..\..\NSISIncludes"

; controls whether or not to enable Enterprise screens
!define ENTERPRISEMODE True ##ENTERPRISEMODE

; MUI 1.67 compatible ------
!include "${NSISINCLUDES}\dotNETCC.nsh"
!include "${NSISINCLUDES}\DumpLog.nsh"
!include "${NSISINCLUDES}\GetDbVersion.nsh"
!include "${NSISINCLUDES}\HandlePriorInstall.nsh"
!include "${NSISINCLUDES}\LogicLib.nsh"
!include "${NSISINCLUDES}\MUI.nsh"
!include "${NSISINCLUDES}\RemoveService.nsh"
!include "${NSISINCLUDES}\Replacement.nsh"
!include "${NSISINCLUDES}\Sections.nsh"
!include "${NSISINCLUDES}\servicelib.nsh"
!include "${NSISINCLUDES}\XML.nsh"


; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Platform-specific Settings (x86 vs. x64)
!ifdef PLATFORM_X64
!define PLATFORM_NAME "x64"
!define PLATFORM_PROGRAMFILES $PROGRAMFILES64
!define PLATFORM_SUBFOLDER "x64"
!define PLATFORM_VC2008 "{350AA351-21FA-3270-8B7A-835434E766AD}"
!define PLATFORM_VC2008SP1 "{8220EEFE-38CD-377E-8595-13398D740ACE}"
!else
!define PLATFORM_X64 "false"
!define PLATFORM_NAME "x86"
!define PLATFORM_PROGRAMFILES $PROGRAMFILES
!define PLATFORM_SUBFOLDER ""
!define PLATFORM_VC2008 "{FF66E9F6-83E7-3A3E-AF14-8DE9A809A6A4}"
!define PLATFORM_VC2008SP1 "{9A25302D-30C0-39D9-BD6F-21E6EC160475}"
!endif

; Check for .NET Framework defines
!define DOTNET_VERSION_REQ "3"
!define CHECKONLY "True" ;If flag is set True then only the check for .NET will happen, if not present will Abort Install

; Distribution Folder Root Path
!define DISTRIBUTIONROOT "..\..\..\..\Distribution\Build\RisServer\${PLATFORM_SUBFOLDER}\Release"
!define CLIENTDISTRIBUTIONROOT "..\..\..\..\Distribution\Build\RisClient_FullViewer\${PLATFORM_SUBFOLDER}\Release"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\..\..\..\License.rtf"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Custom page - get database connection info
Page custom PageDatabaseConnectOnly ValidatePageDatabaseConnectOnly
; Custom page - fetches sparrow server info
Page custom PageSparrowOnlyServer ValidatePageSparrowOnlyServer
; Custom page - fetches enterprise server info
Page custom PageEnterpriseServer ValidatePageEnterpriseServer
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; Reserve files
ReserveFile "PageDatabaseConnectOnly.ini"
ReserveFile "PageSparrowOnlyServer.ini"
ReserveFile "PageEnterpriseServer.ini"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS
; MUI end ------

; Variables
; or Collected from PageDatabaseConnectOnly.ini
Var INI_DBNAME
Var INI_USERID
Var INI_USERPASS
Var INI_HOSTINSTANCE
Var INI_2SLASHHOSTINSTANCE
; Collected in PageSparrowOnlyServer.ini
Var INI_SPARROWHOST
Var INI_SPARROWPORT
; Collected in PageEnterpriseServer.ini
Var INI_ESHOST
Var INI_ESPORT
Var INI_ESUSER
Var INI_ESPASS
; Various Flags and uninstall variables
Var PRIOR_DB_VERSION
Var PERFORM_ASSEMBLY_UPGRADE
Var UNINSTALLER_STRING
Var OLDINSTALLDIR

Name "${INSTALLER_DISPLAY_NAME}"
OutFile "${PRODUCT_NAME}.exe"
InstallDir "${PRODUCT_INSTALL_DIR}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Section "-UninstallOldVersion"
  ${If} $PERFORM_ASSEMBLY_UPGRADE == "True"
    ClearErrors
    IfFileExists "$UNINSTALLER_STRING" +1 done
    ExecWait '$UNINSTALLER_STRING /S /REMOVEDB=$R4 _?=$INSTDIR' $R5
    IfErrors failedUninstall
    StrCmp $R5 "0" done failedUninstall      
  ${Else}
    #Don't need to upgrade
    Return
  ${EndIf}
  
  failedUninstall:
    MessageBox MB_OK|MB_ICONSTOP "Installation cannot proceed because there was a problem with the uninstall of the previous version."
    Quit
    
  done:
SectionEnd

Section "InstallDir"
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File /x *.bat /x *.pdb  "${DISTRIBUTIONROOT}\*.*"
SectionEnd

Section "PluginDir"
  SetOutPath "$INSTDIR\plugins"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\Antlr3.Runtime.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\Castle.Core.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\Castle.DynamicProxy2.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Enterprise.Common.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Enterprise.Configuration.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Enterprise.Configuration.Hibernate.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Enterprise.Core.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Enterprise.Hibernate.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Healthcare.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Healthcare.Hibernate.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Server.ShredHost.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Sparrow*"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\ClearCanvas.Workflow*"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\Iesi.Collections.dll"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\NHapi*"
  File /x *.svn* "${DISTRIBUTIONROOT}\plugins\NHibernate*"
SectionEnd

Section "CommonDir"
  SetOutPath "$INSTDIR\common"
  File /r /x *.svn* "${DISTRIBUTIONROOT}\common\*.*"
SectionEnd

  Section "-ClientFiles"
    SetOutPath "$INSTDIR\clientfiles"
    File /r /x *.svn* /x *.chm* "${CLIENTDISTRIBUTIONROOT}\*.*"
  SectionEnd


Section "SetAppConfig"
  DetailPrint "Setting Ports"
  ${xml::LoadFile} "$INSTDIR\ClearCanvas.Server.ShredHostService.exe.config" $0

  ;ClearCanvas.Sparrow.Server.WebServicesSettings
  ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Sparrow.Server.WebServicesSettings" $0
  ${xml::FirstChildElement} "setting" $0 $1

  loopSparrowBaseUrl:
  ${xml::GetAttribute} "name" $0 $1
  StrCmp "BaseUrl" $0 foundSparrowBaseUrl ;breaks loop

  ${xml::NextSiblingElement} "setting" $0 $1
  StrCmp $1 "0" loopSparrowBaseUrl AppConfigFailed ;loops unless an error occurred

  foundSparrowBaseUrl:
  ${xml::FirstChildElement} "value" $0 $1
  ${xml::SetText} "net.tcp://$INI_SPARROWHOST:$INI_SPARROWPORT/" $1

  DetailPrint "Setting Enterprise Settings"
  Call SetAppConfigEnterpriseSettings
  
  Call SetAppConfigHibernateSettings

  ${xml::SaveFile} "$INSTDIR\ClearCanvas.Server.ShredHostService.exe.config" $0
  ${xml::Unload}
  Return
  
  AppConfigFailed:
  MessageBox MB_OK|MB_ICONSTOP "A failure has occurred on service component configuration. Review the installation log for details.  A reinstallation will be required."
SectionEnd

Section "SetExeAppConfigEnterpriseSettings"
    ${IfThen} ${ENTERPRISEMODE} == False ${|} Return ${|}

    DetailPrint "Configuring Exe Config For Enterprise Server Connection"
    ${xml::LoadFile} "$INSTDIR\ClearCanvas.Ris.Server.Executable.exe.config" $0

    Call SetAppConfigEnterpriseSettings

    Call SetAppConfigHibernateSettings

    ${xml::SaveFile} "$INSTDIR\ClearCanvas.Ris.Server.Executable.exe.config" $0
    ${xml::Unload}
    Return

SectionEnd

Section "-SetClientExeAppConfigEnterpriseSettings"
	${IfThen} ${ENTERPRISEMODE} == False ${|} Return ${|}

	DetailPrint "Configuring Client-side Exe Config For Enterprise Server Connection"
	${xml::LoadFile} "$INSTDIR\clientfiles\ClearCanvas.Desktop.Executable.exe.config" $0

	Call SetClientAppConfig

	${xml::SaveFile} "$INSTDIR\clientfiles\ClearCanvas.Desktop.Executable.exe.config" $0
	${xml::Unload}
	Return

SectionEnd

Section "-MigrationOnUpgradeOrTokenAndSettingsImport"
     ${If} $PERFORM_ASSEMBLY_UPGRADE == "True"
    ###Invoke Settings Migration Stuff here
    ;Migration of Desktop app.config      
    ExecWait '"$INSTDIR\ClearCanvas.Ris.Server.Executable.exe" ClearCanvas.Enterprise.Common.Setup.SetupApplication /suid:$INI_ESUSER /spwd:$INI_ESPASS /g- /p:$TEMP\SparrowOnly_ClearCanvas.Ris.Server.Executable.exe.config' $0
    
    ;Migration of ShredHost app.config      
    ExecWait '"$INSTDIR\ClearCanvas.Server.ShredHostService.exe" /m:$TEMP\SparrowOnly_ClearCanvas.Server.ShredHostService.exe.config' $0
    ${Else}
    
    #Running Setup Application without migration
    ExecWait '"$INSTDIR\ClearCanvas.Ris.Server.Executable.exe" ClearCanvas.Enterprise.Common.Setup.SetupApplication /suid:$INI_ESUSER /spwd:$INI_ESPASS /g- /m-' $0    
    ${EndIf}
	
	#Importing potentially new clientside sparrow plugin settings regardless of migration situation or not
	ExecWait '"$INSTDIR\clientfiles\ClearCanvas.Desktop.Executable.exe" ClearCanvas.Enterprise.Common.Setup.SetupApplication /suid:$INI_ESUSER /spwd:$INI_ESPASS /g- /m-' $0
SectionEnd

Section "Install Shred Host Service" SRVHOST
  SectionIn RO
  !insertmacro SERVICE "create" "${PRODUCT_SERVICE_NAME}" \
  "path=$INSTDIR\Clearcanvas.Server.ShredHostService.exe -service;autostart=1;display=${PRODUCT_SERVICE_NAME};"

  ;Sets description
  WriteRegStr HKLM \
  "SYSTEM\CurrentControlSet\Services\${PRODUCT_SERVICE_NAME}" \
  "Description" "Hosts the Ris Sparrow Server Threads (Shreds)."
SectionEnd


Section -AdditionalIcons
  SetShellVarContext all
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateDirectory "${PRODUCT_STARTMENU_FOLDER}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\ClearCanvas.Ris.Server.Executable.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"

  StrCpy $0 "$INSTDIR\install.log"
  Push $0
  Call DumpLog
SectionEnd

LangString PageDatabaseConnectOnly_TITLE ${LANG_ENGLISH} "Database connection page"
LangString PageDatabaseConnectOnly_SUBTITLE ${LANG_ENGLISH} "This page is used to enter the database connection details for a Ris database that already exist."
LangString PageSparrowOnlyServer_TITLE ${LANG_ENGLISH} "Sparrow Server connection setup page"
LangString PageSparrowOnlyServer_SUBTITLE ${LANG_ENGLISH} "This page is used to select the Sparrow Server listener details."
LangString PageEnterpriseServer_TITLE ${LANG_ENGLISH} "Enterprise Server connection setup page"
LangString PageEnterpriseServer_SUBTITLE ${LANG_ENGLISH} "This page is used to enter the Enterprise Server connection details."

Function .onInit
  ; Check for Platform compared to installer platform
  GetVersion::WindowsPlatformArchitecture
   Pop $R0
  ${If} $R0 == "32"
  ${AndIf} ${PLATFORM_NAME} == "x64"
    MessageBox MB_OK|MB_ICONSTOP "A platform mismatch has been detected.$\n$\nThe 64-bit version of ${PRODUCT_NAME} cannot be installed on a 32-bit Operating System.  Installation will now be aborted." /SD IDOK
    Abort
  ${ElseIf} $R0 == "64"
  ${AndIf} ${PLATFORM_NAME} == "x86"
    MessageBox MB_OK|MB_ICONSTOP "A platform mismatch has been detected.$\n$\nThe 32-bit version of ${PRODUCT_NAME} cannot be installed on a 64-bit Operating System.  Installation will now be aborted." /SD IDOK
    Abort
  ${EndIf}
  
  ; Check for Windows Version
  ; using WindowsName instead of WindowsVersion because of difficulties encountered in performing
  ; numerical comparisons on version numbers.
  GetVersion::WindowsName
   Pop $R0
   ${If} $R0 == "95 OSR2"
   ${OrIf} $R0 == "95"
   ${OrIf} $R0 == "98 SE"
   ${OrIf} $R0 == "98"
   ${OrIf} $R0 == "ME"
   ${OrIf} $R0 == "NT"
   ${OrIf} $R0 == "CE"
   ${OrIf} $R0 == "2000"
     MessageBox MB_OK "${PRODUCT_NAME} requires Windows XP or greater.  The install has aborted."
     Abort "${PRODUCT_NAME} requires Windows XP or greater.  The install has aborted."
   ${EndIf}
   
  ; Check for .NET Framework Install
  ; discovered an unexpected formatting idiosyncrasy for the version string passed into CheckDotNet
  ; e.g. if the req'd version is 3.0.1 or higher but installed version is 3.0.04502.0
  ; using 3.0.1 or 3.0.10... 3.0.1000 doesn't work.  Have to specify 3.0.10000 or a greater number of zeroes
  !insertmacro CheckDotNET "${DOTNET_VERSION_REQ}" "${CHECKONLY}"
  
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "PageDatabaseConnectOnly.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "PageEnterpriseServer.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "PageSparrowOnlyServer.ini"
  
  ; Check for prior or conflicting versionsand prompt to uninstall them before continuing
  Push "ClearCanvas.Ris.Server.Executable.exe" ;version determining assembly
  GetFunctionAddress $R0 InstalledVersionLower
  Push $R0
  GetFunctionAddress $R0 SameVersionInstalled
  Push $R0
  GetFunctionAddress $R0 InstalledVersionHigher
  Push $R0
  GetFunctionAddress $R0 FailedUninstall
  Push $R0
  Call HandlePriorInstall
FunctionEnd

Function installedVersionHigher
  MessageBox MB_OK|MB_ICONSTOP \
  "The Installer has detected that a NEWER version of ${PRODUCT_NAME} is already installed. $\n$\nTo continue with this installation please first uninstall ${PRODUCT_NAME}."
  Abort
FunctionEnd

Function sameVersionInstalled
  MessageBox MB_OK|MB_ICONSTOP \
  "The Installer has detected that the SAME version of ${PRODUCT_NAME} is already installed. $\n$\nTo continue with this installation please first uninstall ${PRODUCT_NAME}."
  Abort
FunctionEnd

Function installedVersionLower
  MessageBox MB_OKCANCEL|MB_ICONEXCLAMATION \
  "Installer has detected that an older ${PRODUCT_NAME} version is already installed. $\n$\nClick `OK` to proceed with upgrade or `Cancel` to cancel this upgrade." \
  IDOK setUninstall
  Abort
  
  setUninstall:
  StrCpy $PERFORM_ASSEMBLY_UPGRADE "True"
  StrCpy $UNINSTALLER_STRING '$R0'
  ; uninst.exe is 10 characters long
  StrCpy $OLDINSTALLDIR $UNINSTALLER_STRING -10

  ;Save app.config files    
  IfFileExists "$OLDINSTALLDIRClearCanvas.Ris.Server.Executable.exe.config" 0 configFilesNotPresent
  IfFileExists "$OLDINSTALLDIRClearCanvas.Server.ShredHostService.exe.config" configFilesPresent configFilesNotPresent  
  
  configFilesNotPresent:
  MessageBox MB_OK|MB_ICONSTOP "Installer cannot access configuration files from the older ${PRODUCT_NAME} install so it cannot be upgraded. $\n$\nTo continue with this installation please first uninstall the older ${PRODUCT_NAME}." /SD IDOK
  Abort
  
  configFilesPresent:
  CopyFiles /SILENT "$OLDINSTALLDIRClearCanvas.Ris.Server.Executable.exe.config" $TEMP\SparrowOnly_ClearCanvas.Ris.Server.Executable.exe.config
  CopyFiles /SILENT "$OLDINSTALLDIRClearCanvas.Server.ShredHostService.exe.config" $TEMP\SparrowOnly_ClearCanvas.Server.ShredHostService.exe.config
  Return
  
  Return
FunctionEnd

Function FailedUninstall
  MessageBox MB_OK|MB_ICONSTOP "Installation cannot proceed because there was a problem with the uninstall of the previous version."
  Abort
FunctionEnd

##Function Includes
!insertmacro Replacement
!insertmacro RemoveService "ClearCanvas.Server.ShredHostService.exe" "${PRODUCT_SERVICE_NAME}"

Function PageDatabaseConnectOnly
  !insertmacro MUI_HEADER_TEXT "$(PageDatabaseConnectOnly_TITLE)" "$(PageDatabaseConnectOnly_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "PageDatabaseConnectOnly.ini"
FunctionEnd

Function ValidatePageDatabaseConnectOnly
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_USERID "PageDatabaseConnectOnly.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_USERPASS "PageDatabaseConnectOnly.ini" "Field 5" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_DBNAME "PageDatabaseConnectOnly.ini" "Field 7" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_HOSTINSTANCE "PageDatabaseConnectOnly.ini" "Field 9" "State"

  StrCmp $INI_USERID "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Ris User Username cannot be blank. Please enter a username."
  Abort
  StrCmp $INI_USERPASS "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Ris User Password cannot be blank. Please enter a password"
  Abort
  StrCmp $INI_DBNAME "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Database Name cannot be blank. Please enter a name."
  Abort
  StrCmp $INI_HOSTINSTANCE "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Database Server Instance cannot be blank. Please enter a name."
  Abort

  Push $INI_HOSTINSTANCE
  Push "\"
  Push "\\"
  Call StrRep
  Pop "$R0"
  StrCpy $INI_2SLASHHOSTINSTANCE $R0

  FileOpen $0 "$TEMP\dbconnect.js" w
  FileWrite $0 "var connection = WScript.CreateObject($\"ADODB.connection$\");$\n"
  FileWrite $0 "connection.Provider = $\"sqloledb$\";$\n"
  FileWrite $0 "connection.Properties($\"Data Source$\").Value = $\"$INI_2SLASHHOSTINSTANCE$\";$\n"
  FileWrite $0 "connection.Properties($\"Initial Catalog$\").Value = $\"$INI_DBNAME$\";$\n"
  FileWrite $0 "try$\n"
  FileWrite $0 "{$\n"
  FileWrite $0 "connection.Open($\"$\", $\"$INI_USERID$\", $\"$INI_USERPASS$\");$\n"
  FileWrite $0 "}$\n"
  FileWrite $0 "catch(err)$\n"
  FileWrite $0 "{$\n"
  FileWrite $0 "WScript.Quit(1);$\n"
  FileWrite $0 "}$\n"
  FileWrite $0 "WScript.Quit(0);$\n"

  FileClose $0

  nsExec::ExecToStack '"cscript" "$TEMP\dbconnect.js"'
  Pop $0
  StrCmp $0 "0" +3 ""
    MessageBox MB_ICONEXCLAMATION|MB_OK "Connection test failed.  Please check connection details and ensure they are correct."
    Abort
    
  Call DetectOldDb
  Pop $0
  ${If} $0 == True
    Push "$INI_DBNAME"
    Push "$INI_USERID"
    Push "$INI_USERPASS"
    Push "$INI_HOSTINSTANCE"
    Call GetDBVersion
    Pop $PRIOR_DB_VERSION

    ${If} $PRIOR_DB_VERSION != ${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD}.${REVISION}
       MessageBox MB_ICONSTOP|MB_OK "The installer has detected an existing database that is different than the version of this installer.  The installer cannot proceed unless this database is first upgraded."
       Quit
    ${EndIf}
  ${EndIf}
FunctionEnd

Function PageSparrowOnlyServer
  !insertmacro MUI_HEADER_TEXT "$(PageSparrowOnlyServer_TITLE)" "$(PageSparrowOnlyServer_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "PageSparrowOnlyServer.ini"
FunctionEnd

Function ValidatePageSparrowOnlyServer
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_SPARROWHOST "PageSparrowOnlyServer.ini" "Field 2" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_SPARROWPORT "PageSparrowOnlyServer.ini" "Field 4" "State"
  StrCmp $INI_SPARROWHOST "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Sparrow Server hostname/ip cannot be blank. Please a proper value."
  Abort
  StrCmp $INI_SPARROWPORT "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Sparrow Server Port cannot be blank. Please enter a port."
  Abort
FunctionEnd

Function PageEnterpriseServer
  ${IfThen} ${ENTERPRISEMODE} == False ${|} Return ${|}

  !insertmacro MUI_HEADER_TEXT "$(PageEnterpriseServer_TITLE)" "$(PageEnterpriseServer_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "PageEnterpriseServer.ini"
FunctionEnd

Function ValidatePageEnterpriseServer
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_ESHOST "PageEnterpriseServer.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_ESPORT "PageEnterpriseServer.ini" "Field 5" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_ESUSER "PageEnterpriseServer.ini" "Field 7" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $INI_ESPASS "PageEnterpriseServer.ini" "Field 9" "State"
  StrCmp $INI_ESHOST "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Enterprise Server hostname/ip cannot be blank. Please a proper value."
  Abort
  StrCmp $INI_ESPORT "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Enterprise Server Port cannot be blank. Please enter a port."
  Abort
  StrCmp $INI_ESUSER "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Enterprise Username cannot be blank. Please enter a Username."
  Abort
  StrCmp $INI_ESPASS "" "" +3
  MessageBox MB_ICONEXCLAMATION|MB_OK "Enterprise User Password cannot be blank. Please enter a Password."
  Abort
FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Function SetAppConfigEnterpriseSettings
   ${IfThen} ${ENTERPRISEMODE} == False ${|} Return ${|}

  ## Enterprise Server connection
    ;RemoteCoreServiceSettings
    ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Enterprise.Common.RemoteCoreServiceSettings" $0
    ${xml::FirstChildElement} "setting" $0 $1

    loopRemoteCoreServiceSettingBaseUrl:
    ${xml::GetAttribute} "name" $0 $1
    StrCmp "BaseUrl" $0 foundRemoteCoreServiceSettingBaseUrl ;breaks loop

    ${xml::NextSiblingElement} "setting" $0 $1
    StrCmp $1 "0" loopRemoteCoreServiceSettingBaseUrl AppConfigFailed ;loops unless an error occurred

    foundRemoteCoreServiceSettingBaseUrl:
    ${xml::FirstChildElement} "value" $0 $1
    ${xml::SetText} "net.tcp://$INI_ESHOST:$INI_ESPORT/" $1

    ##InProcessCoreServiceProvider
    ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Common.ExtensionSettings/setting/value/extensions" $0
    ${xml::FirstChildElement} "extension" $0 $1

    loopInProcessCoreServiceProvider:
    ${xml::GetAttribute} "class" $0 $1
    StrCmp "ClearCanvas.Enterprise.Core.InProcessCoreServiceProvider, ClearCanvas.Enterprise.Core" $0 foundInProcessCoreServiceProvider ;breaks loop
    ${xml::NextSiblingElement} "extension" $0 $1
    StrCmp $1 "0" loopInProcessCoreServiceProvider AppConfigFailed ;loops unless an error occurred

    foundInProcessCoreServiceProvider:
    ${xml::SetAttribute} "enabled" "false" $0

    ##RemoteCoreServiceProvider
    ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Common.ExtensionSettings/setting/value/extensions" $0
    ${xml::FirstChildElement} "extension" $0 $1

    loopRemoteCoreServiceProvider:
    ${xml::GetAttribute} "class" $0 $1
    StrCmp "ClearCanvas.Enterprise.Common.RemoteCoreServiceProvider, ClearCanvas.Enterprise.Common" $0 foundRemoteCoreServiceProvider ;breaks loop
    ${xml::NextSiblingElement} "extension" $0 $1
    StrCmp $1 "0" loopRemoteCoreServiceProvider AppConfigFailed ;loops unless an error occurred

    foundRemoteCoreServiceProvider:
    ${xml::SetAttribute} "enabled" "true" $0
    Return

    AppConfigFailed:
      MessageBox MB_OK|MB_ICONSTOP "A failure has occurred on service component configuration. Review the installation log for details.  A reinstallation will be required."
FunctionEnd

Function SetAppConfigHibernateSettings
  ${xml::GotoPath} "/configuration/hibernate-configuration/session-factory" $0
  ${xml::FirstChildElement} "property" $0 $1

  loopAppConnectionString:
  ${xml::GetAttribute} "name" $0 $1
  StrCmp "connection.connection_string" $0 foundAppConnectionString ;breaks loop

  ${xml::NextSiblingElement} "property" $0 $1
  StrCmp $1 "0" loopAppConnectionString AppConfigFailed ;loops unless an error occurred

  foundAppConnectionString:
  ${xml::SetText} "Data Source=$INI_HOSTINSTANCE;Initial Catalog=$INI_DBNAME;User Id=$INI_USERID;Password=$INI_USERPASS" $0

  ${xml::GotoPath} "/configuration/hibernate-configuration/session-factory" $0
  ${xml::FirstChildElement} "property" $0 $1

  loopDefaultSchema:
  ${xml::GetAttribute} "name" $0 $1
  StrCmp "default_schema" $0 foundDefaultSchema ;breaks loop

  ${xml::NextSiblingElement} "property" $0 $1
  StrCmp $1 "0" loopDefaultSchema AppConfigFailed

  foundDefaultSchema:
  ${xml::SetText} "$INI_DBNAME.dbo" $0

  Return

  AppConfigFailed:
    MessageBox MB_OK|MB_ICONSTOP "A failure has occurred on hibernate configuration. Review the installation log for details.  A reinstallation will be required."
FunctionEnd

Function SetClientAppConfig
    ;RemoteCoreServiceSettings
    ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Enterprise.Common.RemoteCoreServiceSettings" $0
    ${xml::FirstChildElement} "setting" $0 $1

    loopRemoteCoreServiceSettingBaseUrl:
    ${xml::GetAttribute} "name" $0 $1
    StrCmp "BaseUrl" $0 foundRemoteCoreServiceSettingBaseUrl ;breaks loop

    ${xml::NextSiblingElement} "setting" $0 $1
    StrCmp $1 "0" loopRemoteCoreServiceSettingBaseUrl AppConfigFailed ;loops unless an error occurred

    foundRemoteCoreServiceSettingBaseUrl:
    ${xml::FirstChildElement} "value" $0 $1
    ${xml::SetText} "net.tcp://$INI_ESHOST:$INI_ESPORT/" $1

    ;ClearCanvas.Sparrow.Server.WebServicesSettings
    ${xml::GotoPath} "/configuration/applicationSettings/ClearCanvas.Sparrow.Client.WebServicesSettings" $0
    ${xml::FirstChildElement} "setting" $0 $1

    loopSparrowBaseUrl:
    ${xml::GetAttribute} "name" $0 $1
    StrCmp "ApplicationServicesBaseUrl" $0 foundSparrowBaseUrl ;breaks loop

    ${xml::NextSiblingElement} "setting" $0 $1
    StrCmp $1 "0" loopSparrowBaseUrl AppConfigFailed ;loops unless an error occurred

    foundSparrowBaseUrl:
    ${xml::FirstChildElement} "value" $0 $1
    ${xml::SetText} "net.tcp://$INI_SPARROWHOST:$INI_SPARROWPORT/" $1

    Return

    AppConfigFailed:
      MessageBox MB_OK|MB_ICONSTOP "A failure has occurred on ris service component configuration. Review the installation log for details.  A reinstallation will be required."
FunctionEnd

Function DetectOldDb
  FileOpen $0 "$TEMP\dbexists.js" w
  FileWrite $0 "var result = new ActiveXObject($\"ADODB.Recordset$\");$\n"
  FileWrite $0 "var connection = WScript.CreateObject($\"ADODB.connection$\");$\n"
  FileWrite $0 "connection.ConnectionString = $\"PROVIDER=SQLOLEDB.1;USER ID=$INI_USERID;PASSWORD=$INI_USERPASS;INITIAL CATALOG=master;DATA SOURCE=$INI_2SLASHHOSTINSTANCE$\"$\n"

  FileWrite $0 "connection.Open();$\n"

  FileWrite $0 "result = connection.execute($\"IF EXISTS (SELECT name FROM sys.databases WHERE name = N'$INI_DBNAME') select 1 as [test] ELSE select 0 as [test]$\");$\n"
  FileWrite $0 "if(result($\"test$\") == 0)$\n"
  FileWrite $0 "  WScript.Quit(0);$\n"
  FileWrite $0 "else$\n"
  FileWrite $0 "  WScript.Quit(1);$\n"

  FileClose $0

  nsExec::ExecToStack '"cscript" "$TEMP\dbexists.js"'
  Pop $0

  Delete "$TEMP\dbexists.js"

  ${If} "$0" == "1"
    Push True
  ${Else}
    Push False
  ${EndIf}
FunctionEnd

Section Uninstall
  !undef UN
  !define UN "un."
  
  SetShellVarContext all

  IfFileExists "$INSTDIR\ClearCanvas.Server.ShredHostService.exe" 0 +2
  Call un.RemoveService

  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"

  Delete "$INSTDIR\hibernate.cfg.xml"
  Delete "$INSTDIR\actionmodels.xml"
  Delete "$INSTDIR\Logging.config"
  Delete "$INSTDIR\ClearCanvas.Ris.Server.Executable.exe.config"
  Delete "$INSTDIR\ClearCanvas.Ris.Server.Executable.exe"
  Delete "$INSTDIR\ClearCanvas.Server.ShredHostService.exe.config"
  Delete "$INSTDIR\ClearCanvas.Server.ShredHostService.exe"

  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir /r "$INSTDIR\scripts"
  RMDir /r "$INSTDIR\plugins"
  RMDir /r "$INSTDIR\common"
  RMDir /r "$INSTDIR\web"
  RMDir /r "$INSTDIR\SampleData\"
  RMDir /r "$INSTDIR\clientfiles"

  Delete "$INSTDIR\*.*"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
  
  StrCpy $0 "$INSTDIR\uninstall.log"
  Push $0
  Call un.DumpLog
SectionEnd