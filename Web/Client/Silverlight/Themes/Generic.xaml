<!-- License (non-CC)
 
// The SL3Menu project (http://sl3menu.codeplex.com/) and the Silverlight toolkit (http://silverlight.codeplex.com/)
// were used as a reference when writing this code.  As such this is considered a derived work and licensed under Ms-PL.
//
// Microsoft Public License (Ms-PL)
//
// This license governs use of the accompanying software. If you use the software, you accept this license. If you 
// do not accept the license, do not use the software.
//
// 1. Definitions
//
// The terms "reproduce," "reproduction," "derivative works," and "distribution" have the same meaning here as under
// U.S. copyright law.
//
// A "contribution" is the original software, or any additions or changes to the software.
//
// A "contributor" is any person that distributes its contribution under this license.
//
//"Licensed patents" are a contributor's patent claims that read directly on its contribution.
//
// 2. Grant of Rights
//
// (A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in 
//     section 3, each contributor grants you a non-exclusive, worldwide, royalty-free copyright license to
//     reproduce its contribution, prepare derivative works of its contribution, and distribute its contribution or 
//     any derivative works that you create.
//
// (B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in 
//     section 3, each contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed 
//     patents to make, have made, use, sell, offer for sale, import, and/or otherwise dispose of its contribution 
//     in the software or derivative works of the contribution in the software.
//
// 3. Conditions and Limitations
//
// (A) No Trademark License- This license does not grant you rights to use any contributors' name, logo, or
//     trademarks.
//
// (B) If you bring a patent claim against any contributor over patents that you claim are infringed by the 
//     software, your patent license from such contributor to the software ends automatically.
//
// (C) If you distribute any portion of the software, you must retain all copyright, patent, trademark, and
//     attribution notices that are present in the software.
//
// (D) If you distribute any portion of the software in source code form, you may do so only under this license 
//     by including a complete copy of this license with your distribution. If you distribute any portion of the 
//     software in compiled or object code form, you may only do so under a license that complies with this license.
//
// (E) The software is licensed "as-is." You bear the risk of using it. The contributors give no express warranties,
//     guarantees or conditions. You may have additional consumer rights under your local laws which this license
//     cannot change. To the extent permitted under your local laws, the contributors exclude the implied warranties
//     of merchantability, fitness for a particular purpose and non-infringement.

    -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:local="clr-namespace:Macro.Web.Client.Silverlight">

    <Style TargetType="local:ContextMenu" >
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContextMenu">
                    <Border CornerRadius="4" BorderBrush="#f8a0a0a0" BorderThickness="1">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#f8f0f0f0" Offset="0.0"/>
                                <GradientStop Color="#f8f8f8f8" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!--<Border.Effect>
                            <DropShadowEffect/>
                        </Border.Effect>-->
                        <local:MenuScrollViewer x:Name="DependentContainerElement">
                            <ItemsPresenter/>
                        </local:MenuScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:MenuItem">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="MenuPositioningStrategy">
            <Setter.Value>
                <local:DefaultMenuPositioningStrategy ConstrainMenuHeight="False"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MenuItem" >
                    <Grid x:Name="LayoutRoot">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="HoverElement"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="IsExpandableElement"
                                        Storyboard.TargetProperty="Fill"
                                        Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Gray" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="ContentElement"
                                        Storyboard.TargetProperty="Foreground"
                                        Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Gray" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>

                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="UnChecked">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="CheckedNoIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckBorderElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckmarkElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="CheckedWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="CheckBorderElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="HasItemsStates">
                                <vsm:VisualState x:Name="NoItems">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="HasItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="IsExpandableElement"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="0" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Visibility="Visible" Fill="Transparent"/>
                        <Border x:Name="HoverElement" Grid.Column="0" Grid.ColumnSpan="3"
                                   CornerRadius="4" Visibility="Collapsed"
                                   BorderBrush="#ff96d9f9" BorderThickness="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#aaf1f8fb" Offset="0.0"/>
                                    <GradientStop Color="#aabae4f6" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Margin="1 1" Grid.Column="0" x:Name="CheckBorderElement" Visibility="Collapsed" BorderBrush="#ff96d9f9" BorderThickness="1" CornerRadius="4">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#aaf1f8fb" Offset="0.0"/>
                                    <GradientStop Color="#aabae4f6" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--<Border.Effect>
                                <BlurEffect></BlurEffect>
                            </Border.Effect>-->
                        </Border>
                        <Polygon Margin="2 2" Grid.Column="0" x:Name="CheckmarkElement" Visibility="Collapsed" Points="0,12 4,16 12,4 4,12 0,12"
                                Stroke="Black" StrokeThickness="1"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Fill="DarkGray">
                        </Polygon>
                        <Image Grid.Column="0" Name="IconElement" MaxHeight="24" MaxWidth="24" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill"/>
                        <ContentControl Grid.Column="1" Name="ContentElement" MinHeight="20" VerticalContentAlignment="Center" />
                        <Polygon x:Name="IsExpandableElement" Grid.Column="2" Points="0,0 4,4 0,8" Fill="Black"
                                 HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" />
                        <Popup x:Name="PopupElement" Grid.Column="3" IsOpen="false">
                            <Border CornerRadius="4" BorderBrush="#f8a0a0a0" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#f8f0f0f0" Offset="0.0"/>
                                        <GradientStop Color="#f8f8f8f8" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--<Border.Effect>
                                    <DropShadowEffect/>
                                </Border.Effect>-->
                                <local:MenuScrollViewer x:Name="DependentContainerElement">
                                    <ItemsPresenter/>
                                </local:MenuScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:CustomScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CustomScrollViewer">
                    <ScrollViewer Name="ScrollViewerElement" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <ContentPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
